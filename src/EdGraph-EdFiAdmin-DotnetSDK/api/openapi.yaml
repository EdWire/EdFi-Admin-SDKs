openapi: 3.0.1
info:
  description: Ed-Fi Admin Api - v1.0
  title: Ed-Fi Admin Api
  version: v1.0
servers:
- url: https://api.dev.edgraph.com/tenant
security:
- oauth2:
  - https://api.edgraph.com/tenant
paths:
  /tenants/{tenantId}/edfiadmin/connections/{connectionId}:
    delete:
      operationId: DeleteEdFiConnection
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: connectionId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionDeletedResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Not Found
      summary: Deletes an Ed-Fi Connection.
      tags:
      - Connections
    get:
      operationId: GetEdFiConnectionById
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: connectionId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiConnection'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves an Ed-Fi Connection by ID.
      tags:
      - Connections
    put:
      operationId: UpdateEdFiConnection
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: connectionId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiConnectionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiConnectionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiConnectionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiConnectionRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionUpdatedResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Not Found
      summary: Updates an Ed-Fi Connection.
      tags:
      - Connections
  /tenants/{tenantId}/edfiadmin/connections/odsbackupcodes:
    get:
      operationId: GetEdFiOdsBackupCodesDescriptorsAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiOdsBackupDescriptorsPaginatedItemsResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Retrieves a list of Ed-Fi ODS backup codes.
      tags:
      - Connections
  /tenants/{tenantId}/edfiadmin/connections:
    get:
      operationId: GetEdFiConnectionsAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionPaginatedItemsResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Retrieves a list of Ed-Fi Connections.
      tags:
      - Connections
    post:
      operationId: CreateEdFiConnection
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiConnectionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiConnectionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiConnectionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiConnectionRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "201":
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
      summary: Creates a new Ed-Fi Connection.
      tags:
      - Connections
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications/{applicationId}/apiclients/{apiClientId}/access/{accessId}:
    delete:
      operationId: DeleteApplicationUserAccessAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: apiClientId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: accessId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Deletes an application user access.
      tags:
      - Instances / Applications
    get:
      operationId: GetApplicationAccessByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: apiClientId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: accessId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.ApplicationAccessResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves an application access by ID.
      tags:
      - Instances / Applications
    put:
      operationId: UpdateApplicationUserAccessAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: apiClientId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: accessId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.UpdateApplicationAccessRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.UpdateApplicationAccessRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.UpdateApplicationAccessRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.UpdateApplicationAccessRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "201":
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
      summary: Updates a new application access.
      tags:
      - Instances / Applications
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications/{applicationId}/apiclients/{apiClientId}/access:
    get:
      operationId: GetApplicationAccessAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: apiClientId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.ApplicationAccessResponsePaginatedItemsViewModel'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Retrieves a list of application accesses.
      tags:
      - Instances / Applications
    post:
      operationId: CreateApplicationUserAccessAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: apiClientId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.CreateApplicationAccessRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.CreateApplicationAccessRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.CreateApplicationAccessRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.CreateApplicationAccessRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "201":
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
      summary: Creates a new application access.
      tags:
      - Instances / Applications
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications/{applicationId}/apiclients/{apiClientId}/regenerate:
    put:
      operationId: RegenerateApiClientSecretAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: apiClientId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.RegenerateApiClientSecretResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Regenerates the secret of an API Client.
      tags:
      - Instances / Applications
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications/{applicationId}/apiclients/{apiClientId}:
    get:
      operationId: GetApplicationApiClientByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: apiClientId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationApiClientProfileResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves an API Client of an Application by ID.
      tags:
      - Instances / Applications
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications/{applicationId}/apiclients:
    get:
      operationId: GetApplicationApiClientsAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationApiClientProfileResponsePaginatedItemsViewModel'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves the API Clients of an Application.
      tags:
      - Instances / Applications
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications/{applicationId}/sync:
    post:
      operationId: SyncApplicationAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncApplicationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncApplicationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncApplicationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncApplicationRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Copies an Application from one instance to another/other instance(s)
      tags:
      - Instances / Applications
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications/{applicationId}:
    delete:
      operationId: DeleteApplicationAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Deletes an Application.
      tags:
      - Instances / Applications
    get:
      operationId: GetApplicationByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationProfileResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves an Application by ID.
      tags:
      - Instances / Applications
    put:
      operationId: UpdateApplicationAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiApplicationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiApplicationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiApplicationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiApplicationRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Updates an Application.
      tags:
      - Instances / Applications
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications:
    get:
      operationId: GetApplicationsAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationListResponsePaginatedItemsViewModel'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a list of Applications.
      tags:
      - Instances / Applications
    post:
      operationId: CreateApplicationAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiApplicationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiApplicationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiApplicationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiApplicationRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationCreatedResponse'
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Creates an Application.
      tags:
      - Instances / Applications
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/authorizationstrategies:
    get:
      operationId: GetAuthorizationStrategiesAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AuthorizationStrategiesResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Retrieves a list of Authorization Strategies.
      tags:
      - Instances / Authorization Strategies
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/claimsets/{claimSetId}/resourceclaims:
    get:
      operationId: GetResourceClaimsGridAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: claimSetId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.GetResourceClaimsGridResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a grid of Resource Claims.
      tags:
      - Instances / ClaimSets
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/claimsets/{claimSetId}/sync:
    post:
      operationId: SyncClaimSetAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: claimSetId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncClaimSetRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncClaimSetRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncClaimSetRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncClaimSetRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Copies a Claim Set from one instance to another/other instance(s)
      tags:
      - Instances / ClaimSets
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/claimsets/{claimSetId}:
    delete:
      operationId: DeleteClaimSetAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: claimSetId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Deletes a ClaimSet.
      tags:
      - Instances / ClaimSets
    get:
      operationId: GetClaimSetByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: claimSetId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ClaimSet'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a ClaimSet by ID.
      tags:
      - Instances / ClaimSets
    put:
      operationId: UpdateClaimSetAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: claimSetId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Updates a ClaimSet.
      tags:
      - Instances / ClaimSets
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/claimsets:
    get:
      operationId: GetClaimSetsAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ClaimSetPaginatedItemsViewModel'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a list of ClaimSets.
      tags:
      - Instances / ClaimSets
    post:
      operationId: CreateClaimSetAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Creates a ClaimSet.
      tags:
      - Instances / ClaimSets
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/descriptors/{descriptorId}:
    delete:
      operationId: DeleteDescriptorAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: descriptorId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Deletes a Descriptor.
      tags:
      - Instances / Descriptors
    get:
      operationId: GetDescriptorByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: descriptorId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a Descriptor by ID.
      tags:
      - Instances / Descriptors
    put:
      operationId: UpdateDescriptorAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: descriptorId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorUpdatedResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Updates a Descriptor.
      tags:
      - Instances / Descriptors
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/descriptors:
    get:
      operationId: GetDescriptorsAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorsPaginatedItemsResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a list of Descriptors.
      tags:
      - Instances / Descriptors
    post:
      operationId: CreateDescriptorAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorCreatedResponse'
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Creates a Descriptor.
      tags:
      - Instances / Descriptors
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/namespaces:
    get:
      operationId: GetDescriptorNamespacesAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorNamespacesPaginatedItemsResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a list of Descriptor Namespaces.
      tags:
      - Instances / Descriptors
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/educationservicecenters/{educationServiceCenterId}:
    delete:
      operationId: DeleteEducationServiceCenterAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: educationServiceCenterId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Deletes an EducationServiceCenter.
      tags:
      - Instances / Education Organizations / Education Service Centers
    get:
      operationId: GetEducationServiceCenterByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: educationServiceCenterId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EducationServiceCenter'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves an EducationServiceCenter by ID.
      tags:
      - Instances / Education Organizations / Education Service Centers
    put:
      operationId: UpdateEducationServiceCenterAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: educationServiceCenterId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEducationServiceCenterRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEducationServiceCenterRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEducationServiceCenterRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEducationServiceCenterRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Updates an EducationServiceCenter.
      tags:
      - Instances / Education Organizations / Education Service Centers
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/educationservicecenters:
    post:
      operationId: CreateEducationServiceCenterAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEducationServiceCenterRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEducationServiceCenterRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEducationServiceCenterRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEducationServiceCenterRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EducationServiceCenterCreatedResponse'
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Creates an EducationServiceCenter.
      tags:
      - Instances / Education Organizations / Education Service Centers
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/localeducationagencies/{localEducationAgencyId}/sync:
    post:
      operationId: SyncLocalEducationAgencyAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: localEducationAgencyId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncLocalEducationAgencyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncLocalEducationAgencyRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncLocalEducationAgencyRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncLocalEducationAgencyRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Copies a LocalEducationAgency from one instance to another/other instance(s).
      tags:
      - Instances / Education Organizations / Local Education Agencies
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/localeducationagencies/{localEducationAgencyId}:
    delete:
      operationId: DeleteLocalEducationAgencyAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: localEducationAgencyId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Deletes a LocalEducationAgency.
      tags:
      - Instances / Education Organizations / Local Education Agencies
    get:
      operationId: GetLocalEducationAgencyByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: localEducationAgencyId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.GetLocalEducationAgencyProfileResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a LocalEducationAgency by ID.
      tags:
      - Instances / Education Organizations / Local Education Agencies
    put:
      operationId: UpdateLocalEducationAgencyAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: localEducationAgencyId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateLocalEducationAgencyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateLocalEducationAgencyRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateLocalEducationAgencyRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateLocalEducationAgencyRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Updates a LocalEducationAgency.
      tags:
      - Instances / Education Organizations / Local Education Agencies
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/localeducationagencies:
    get:
      operationId: GetlLocalEducationAgenciesAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgencyTableViewResponsePaginatedItemsViewModel'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a list of LocalEducationAgencies.
      tags:
      - Instances / Education Organizations / Local Education Agencies
    post:
      operationId: CreateLocalEducationAgencyAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateLocalEducationAgencyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateLocalEducationAgencyRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateLocalEducationAgencyRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateLocalEducationAgencyRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgencyCreatedResponse'
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Creates a LocalEducationAgency.
      tags:
      - Instances / Education Organizations / Local Education Agencies
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/stateeducationagencies/{stateEducationAgencyId}:
    delete:
      operationId: DeleteStateEducationAgencyAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: stateEducationAgencyId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Deletes a StateEducationAgency.
      tags:
      - Instances / Education Organizations / State Education Agencies
    get:
      operationId: GetStateEducationAgencyByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: stateEducationAgencyId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StateEducationAgency'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a StateEducationAgency by ID.
      tags:
      - Instances / Education Organizations / State Education Agencies
    put:
      operationId: UpdateStateEducationAgencyAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: stateEducationAgencyId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateStateEducationAgencyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateStateEducationAgencyRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateStateEducationAgencyRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateStateEducationAgencyRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Updates a StateEducationAgency.
      tags:
      - Instances / Education Organizations / State Education Agencies
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/stateeducationagencies:
    post:
      operationId: CreateStateEducationAgencyAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateStateEducationAgencyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateStateEducationAgencyRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateStateEducationAgencyRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateStateEducationAgencyRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StateEducationAgencyCreatedResponse'
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Creates a StateEducationAgency.
      tags:
      - Instances / Education Organizations / State Education Agencies
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/generate:
    post:
      operationId: GenerateReportsAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.GenerateReportsResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Queues a job to generate the report views in the ODS Database.
      tags:
      - Instances / Reports
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/schoolsbytype/{localEducationAgencyId}:
    get:
      operationId: GetSchoolsByTypeReportAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: localEducationAgencyId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SchoolsByTypeReportResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a "Schools By Type" report.
      tags:
      - Instances / Reports
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/status:
    get:
      operationId: GetReportsStatusAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ReportsStatusResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves the status of the report views in Instance.
      tags:
      - Instances / Reports
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/studentenrollment/ethnicity/{localEducationAgencyId}:
    get:
      operationId: GetStudentEnrollmentByEthnicityReport
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: localEducationAgencyId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentEnrollmentByEthnicityReportResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a "Student Enrollment By Ethnicity" report.
      tags:
      - Instances / Reports
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/studentenrollment/gender/{localEducationAgencyId}:
    get:
      operationId: GetStudentEnrollmentByGenderReportAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: localEducationAgencyId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentEnrollmentByGenderReportResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a "Student Enrollment By Gender" report.
      tags:
      - Instances / Reports
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/studentenrollment/race/{localEducationAgencyId}:
    get:
      operationId: GetStudentEnrollmentByRaceReportAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: localEducationAgencyId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentEnrollmentByRaceReportResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a "Student Enrollment By Race" report.
      tags:
      - Instances / Reports
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/studentsbyprogram/{localEducationAgencyId}:
    get:
      operationId: GetStudentsByProgramReportAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: localEducationAgencyId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentsByProgramReportResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a "Students By Program" report.
      tags:
      - Instances / Reports
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/studentseconomicsituation/{localEducationAgencyId}:
    get:
      operationId: GetStudentEconomicSituationReportAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: localEducationAgencyId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentEconomicSituationReportResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a "Students Economic Situation" report.
      tags:
      - Instances / Reports
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/totalenrollments/{localEducationAgencyId}:
    get:
      operationId: GetTotalEnrollmentsReportAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: localEducationAgencyId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.TotalEnrollmentsReportResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a "Total Enrollments" report.
      tags:
      - Instances / Reports
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/vendors/{vendorId}/sync:
    post:
      operationId: SyncVendorAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: vendorId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncVendorRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncVendorRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncVendorRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncVendorRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Copies a Vendor from one instance to another/other instance(s).
      tags:
      - Instances / Vendors
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/vendors/{vendorId}:
    delete:
      operationId: DeleteVendorAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: vendorId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Deletes a Vendor.
      tags:
      - Instances / Vendors
    get:
      operationId: GetVendorByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: vendorId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.VendorProfileResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a Vendor by ID.
      tags:
      - Instances / Vendors
    put:
      operationId: UpdateVendorAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: vendorId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateVendorRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateVendorRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateVendorRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateVendorRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.VendorUpdatedResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Updates a Vendor.
      tags:
      - Instances / Vendors
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/vendors:
    get:
      operationId: GetVendorsAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.VendorListResponsePaginatedItemsViewModel'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves a list of Vendors.
      tags:
      - Instances / Vendors
    post:
      operationId: CreateVendorAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateVendorRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateVendorRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateVendorRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateVendorRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.VendorCreatedResponse'
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Creates a new Vendor.
      tags:
      - Instances / Vendors
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/clone:
    post:
      operationId: CloneInstanceAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CloneInstanceRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CloneInstanceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CloneInstanceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CloneInstanceRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CloneInstanceResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Clones an instance.
      tags:
      - Instances
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/default:
    put:
      operationId: SetInstanceIsDefault
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SetInstanceIsDefaultRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SetInstanceIsDefaultRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SetInstanceIsDefaultRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SetInstanceIsDefaultRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Updates the isDefault property for an instance
      tags:
      - Instances
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/endpoints:
    get:
      operationId: GetEdFiAdminInstanceEndpoints
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceEndpointsResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves the Ed-Fi API endpoint URLs of an Instance.
      tags:
      - Instances
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/resetinstance:
    post:
      operationId: ResetInstanceAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ResetInstanceResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Resets an Instance.
      tags:
      - Instances
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/testconnection:
    post:
      operationId: TestInstanceConnection
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.TestInstanceConnectionResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Tests the connection of the Instance.
      tags:
      - Instances
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/endpoints:
    get:
      operationId: GetEdFiAdminInstanceYearEndpoints
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceEndpointsResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves the Ed-Fi API endpoint URLs of an Instance.
      tags:
      - Instances
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/resetcache:
    post:
      operationId: ResetInstanceCacheAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ResetInstanceResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Resets the cache of an Instance and the specified ODS database.
      tags:
      - Instances
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/resetods:
    post:
      operationId: ResetSchoolYearAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Resets the ODS database with the specified school year.
      tags:
      - Instances
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/testconnection:
    post:
      operationId: TestInstanceYearConnection
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.TestInstanceConnectionResponse'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Tests the connection of the Instance.
      tags:
      - Instances
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/tiers:
    put:
      operationId: ChangeInstanceDatabaseTierAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ChangeDatabaseTierRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ChangeDatabaseTierRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ChangeDatabaseTierRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ChangeDatabaseTierRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Changes the selected tier of an ODS database.
      tags:
      - Instances
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}:
    delete:
      operationId: DeleteSchoolYearAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Removes an ODS database from an Instance.
      tags:
      - Instances
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/bulk:
    post:
      operationId: AddSchoolYearRange
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Adds multiple ODS databases to an instance.
      tags:
      - Instances
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}/years:
    post:
      operationId: AddSchoolYear
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Adds an ODS database to an Instance.
      tags:
      - Instances
  /tenants/{tenantId}/edfiadmin/instances/{instanceId}:
    delete:
      operationId: DeleteInstanceAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "204":
          description: The resource was successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Deletes an Instance.
      tags:
      - Instances
    get:
      operationId: GetInstanceByIdAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.Instance'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: The resource could not be found.
      summary: Retrieves an Instance by ID.
      tags:
      - Instances
    put:
      operationId: UpdateInstanceAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateInstanceRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateInstanceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateInstanceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateInstanceRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Not Found
      summary: Updates an Instance.
      tags:
      - Instances
  /tenants/{tenantId}/edfiadmin/instances:
    get:
      operationId: GetInstancesAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: deleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: ""
        explode: true
        in: query
        name: targetTenantId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstancePaginatedItemsViewModel'
          description: The requested resource was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
      summary: Retrieves a list of Instances.
      tags:
      - Instances
    post:
      operationId: CreateInstanceAsync
      parameters:
      - description: ""
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-version
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequest'
        description: ""
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Unauthorized. The request requires authentication. The OAuth
            bearer token was either not provided or is invalid. The operation may
            succeed once authentication has been successfully completed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: Forbidden. The request cannot be completed in the current authorization
            context. Contact your administrator if you believe this operation should
            be allowed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails'
          description: An unhandled error occurred on the server.See the response
            body for details.
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails'
          description: Bad Request. The request was invalid and cannot be completed.
            See the response body for specific validation errors. This will typically
            be an issue with the query parameters or the request body values.
        "201":
          description: The resource was created. The location of the resource is available
            in the Location header of the response.
      summary: Creates a new Instance.
      tags:
      - Instances
components:
  schemas:
    EdFiAdminApi.ApplicationAccess.V1.ApplicationAccessResponse:
      additionalProperties: false
      example:
        tenantId: tenantId
        apiClientId: 6
        id: id
        applicationId: 0
        users:
        - userId: userId
        - userId: userId
      properties:
        id:
          nullable: true
          type: string
        tenantId:
          nullable: true
          type: string
        applicationId:
          format: int32
          type: integer
        apiClientId:
          format: int32
          type: integer
        users:
          items:
            $ref: '#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.ApplicationUserAccessResponse'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdFiAdminApi.ApplicationAccess.V1.ApplicationAccessResponsePaginatedItemsViewModel:
      additionalProperties: false
      example:
        data:
        - tenantId: tenantId
          apiClientId: 6
          id: id
          applicationId: 0
          users:
          - userId: userId
          - userId: userId
        - tenantId: tenantId
          apiClientId: 6
          id: id
          applicationId: 0
          users:
          - userId: userId
          - userId: userId
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.ApplicationAccessResponse'
          nullable: true
          type: array
      type: object
    EdFiAdminApi.ApplicationAccess.V1.ApplicationUserAccessResponse:
      additionalProperties: false
      example:
        userId: userId
      properties:
        userId:
          nullable: true
          type: string
      type: object
    EdFiAdminApi.ApplicationAccess.V1.CreateApplicationAccessRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        applicationId:
          format: int32
          type: integer
        apiClientId:
          format: int32
          type: integer
        users:
          items:
            $ref: '#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.ApplicationUserAccessResponse'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdFiAdminApi.ApplicationAccess.V1.UpdateApplicationAccessRequest:
      additionalProperties: false
      properties:
        id:
          nullable: true
          type: string
        tenantId:
          nullable: true
          type: string
        applicationId:
          format: int32
          type: integer
        apiClientId:
          format: int32
          type: integer
        users:
          items:
            $ref: '#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.ApplicationUserAccessResponse'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdGraph.Common.Errors.Core.ProblemDetails:
      additionalProperties: false
      example:
        extensions:
          key: ""
        instance: instance
        details: details
        type: type
        title: title
        status: 0
      properties:
        type:
          nullable: true
          type: string
        status:
          format: int32
          type: integer
        title:
          nullable: true
          type: string
        details:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
        extensions:
          additionalProperties:
            nullable: true
          nullable: true
          readOnly: true
          type: object
      type: object
    EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        entries:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequestEntry'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequestEntry:
      additionalProperties: false
      properties:
        year:
          format: int32
          type: integer
        selectedTierId:
          nullable: true
          type: string
        odsBackupCode:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        year:
          format: int32
          type: integer
        selectedTierId:
          nullable: true
          type: string
        odsBackupCode:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.ApplicationEndpoint:
      additionalProperties: false
      example:
        accessType: accessType
        url: url
      properties:
        accessType:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.AuthorizationStrategiesResponse:
      additionalProperties: false
      example:
        data:
        - data
        - data
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.ChangeDatabaseTierRequest:
      additionalProperties: false
      properties:
        instanceId:
          nullable: true
          type: string
        tenantId:
          nullable: true
          type: string
        year:
          format: int32
          nullable: true
          type: integer
        selectedTier:
          $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DatabaseTier'
      type: object
    EdfiAdminApi.EdfiAdmin.V1.ClaimSet:
      additionalProperties: false
      example:
        claimSetId: 0
        claimSetName: claimSetName
        applicationsCount: 6
        isSystemReserved: true
      properties:
        claimSetId:
          format: int32
          type: integer
        claimSetName:
          nullable: true
          type: string
        isSystemReserved:
          type: boolean
        applicationsCount:
          format: int32
          type: integer
      type: object
    EdfiAdminApi.EdfiAdmin.V1.ClaimSetDetailsResourceClaim:
      additionalProperties: false
      properties:
        resourceClaimId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        create:
          type: boolean
        createAuthStrategy:
          nullable: true
          type: string
        createAuthStrategyOverride:
          nullable: true
          type: string
        read:
          type: boolean
        readAuthStrategy:
          nullable: true
          type: string
        readAuthStrategyOverride:
          nullable: true
          type: string
        update:
          type: boolean
        updateAuthStrategy:
          nullable: true
          type: string
        updateAuthStrategyOverride:
          nullable: true
          type: string
        delete:
          type: boolean
        deleteAuthStrategy:
          nullable: true
          type: string
        deleteAuthStrategyOverride:
          nullable: true
          type: string
        children:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ClaimSetDetailsResourceClaim'
          nullable: true
          readOnly: true
          type: array
        readChanges:
          type: boolean
        readChangesAuthStrategy:
          nullable: true
          type: string
        readChangesAuthStrategyOverride:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.ClaimSetPaginatedItemsViewModel:
      additionalProperties: false
      example:
        data:
        - claimSetId: 0
          claimSetName: claimSetName
          applicationsCount: 6
          isSystemReserved: true
        - claimSetId: 0
          claimSetName: claimSetName
          applicationsCount: 6
          isSystemReserved: true
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ClaimSet'
          nullable: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.CloneInstanceRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        sourceInstanceId:
          nullable: true
          type: string
        cloneInstanceName:
          nullable: true
          type: string
        cloneInstanceUseCustomId:
          type: boolean
        cloneInstanceCustomId:
          nullable: true
          type: string
        cloneInstanceDescription:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.CloneInstanceResponse:
      additionalProperties: false
      example:
        tenantId: tenantId
      properties:
        tenantId:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.CreateEdFiApplicationRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        applicationId:
          format: int32
          type: integer
        applicationName:
          nullable: true
          type: string
        claimSetName:
          nullable: true
          type: string
        operationalContextUri:
          nullable: true
          type: string
        vendorId:
          format: int32
          type: integer
        educationOrganizations:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EducationOrganization'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.CreateEdFiConnectionRequest:
      additionalProperties: false
      properties:
        connectionId:
          nullable: true
          type: string
        tenantId:
          nullable: true
          type: string
        connectionType:
          nullable: true
          type: string
        connectionName:
          nullable: true
          type: string
        edFiVersion:
          nullable: true
          type: string
        edFiExtension:
          nullable: true
          type: string
        metadataUrl:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        clientSecret:
          nullable: true
          type: string
        tokenUrl:
          nullable: true
          type: string
        resourcesUrl:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.CreateEducationServiceCenterRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        educationServiceCenterId:
          format: int32
          type: integer
        nameOfInstitution:
          nullable: true
          type: string
        educationOrganizationCategoryDescriptors:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequest:
      additionalProperties: false
      properties:
        instanceName:
          description: Details
          nullable: true
          type: string
        useCustomId:
          type: boolean
        customId:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        databaseEngine:
          description: Connection
          nullable: true
          type: string
        selectedConnectionId:
          nullable: true
          type: string
        schoolYears:
          description: School Years
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequestSchoolYear'
          nullable: true
          readOnly: true
          type: array
        tenantId:
          description: Metadata
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequestSchoolYear:
      additionalProperties: false
      properties:
        year:
          format: int32
          type: integer
        selectedTierId:
          nullable: true
          type: string
        odsBackupCode:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.CreateLocalEducationAgencyRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        year:
          format: int32
          nullable: true
          type: integer
        localEducationAgency:
          $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgency'
      type: object
    EdfiAdminApi.EdfiAdmin.V1.CreateStateEducationAgencyRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        stateEducationAgencyId:
          format: int32
          type: integer
        nameOfInstitution:
          nullable: true
          type: string
        educationOrganizationCategoryDescriptors:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.CreateVendorRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        vendorId:
          format: int32
          type: integer
        vendorName:
          nullable: true
          type: string
        applications:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplication'
          nullable: true
          readOnly: true
          type: array
        namespacePrefixes:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.DatabaseTier:
      enum:
      - GeneralPurpose
      - BusinessCritical
      type: string
    EdfiAdminApi.EdfiAdmin.V1.DescriptorCreatedResponse:
      additionalProperties: false
      example:
        instanceId: instanceId
        descriptorId: 0
        tenantId: tenantId
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        descriptorId:
          format: int32
          type: integer
      type: object
    EdfiAdminApi.EdfiAdmin.V1.DescriptorNamespacesPaginatedItemsResponse:
      additionalProperties: false
      example:
        data:
        - data
        - data
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.DescriptorType:
      additionalProperties: false
      example:
        descriptorId: 0
        namespace: namespace
        description: description
        shortDescription: shortDescription
        codeValue: codeValue
      properties:
        descriptorId:
          format: int32
          type: integer
        namespace:
          nullable: true
          type: string
        codeValue:
          nullable: true
          type: string
        shortDescription:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.DescriptorUpdatedResponse:
      additionalProperties: false
      example:
        instanceId: instanceId
        tenantId: tenantId
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.DescriptorsPaginatedItemsResponse:
      additionalProperties: false
      example:
        data:
        - descriptorId: 0
          namespace: namespace
          description: description
          shortDescription: shortDescription
          codeValue: codeValue
        - descriptorId: 0
          namespace: namespace
          description: description
          shortDescription: shortDescription
          codeValue: codeValue
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.EdFiApplication:
      additionalProperties: false
      example:
        operationalContextUri: operationalContextUri
        tenantId: tenantId
        vendorId: 1
        claimSetName: claimSetName
        applicationId: 6
        applicationName: applicationName
      properties:
        tenantId:
          nullable: true
          type: string
        applicationId:
          format: int32
          type: integer
        applicationName:
          nullable: true
          type: string
        claimSetName:
          nullable: true
          type: string
        operationalContextUri:
          nullable: true
          type: string
        vendorId:
          format: int32
          type: integer
      type: object
    EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationApiClientProfileResponse:
      additionalProperties: false
      example:
        secretIsHashed: true
        instanceId: instanceId
        keyStatus: keyStatus
        tenantId: tenantId
        name: name
        apiClientId: 0
        secret: secret
        isApproved: true
        sandboxType: 6
        applicationId: 1
        useSandbox: true
        key: key
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        apiClientId:
          format: int32
          type: integer
        key:
          nullable: true
          type: string
        secret:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        isApproved:
          type: boolean
        useSandbox:
          type: boolean
        sandboxType:
          format: int32
          type: integer
        applicationId:
          format: int32
          type: integer
        secretIsHashed:
          type: boolean
        keyStatus:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationApiClientProfileResponsePaginatedItemsViewModel:
      additionalProperties: false
      example:
        data:
        - secretIsHashed: true
          instanceId: instanceId
          keyStatus: keyStatus
          tenantId: tenantId
          name: name
          apiClientId: 0
          secret: secret
          isApproved: true
          sandboxType: 6
          applicationId: 1
          useSandbox: true
          key: key
        - secretIsHashed: true
          instanceId: instanceId
          keyStatus: keyStatus
          tenantId: tenantId
          name: name
          apiClientId: 0
          secret: secret
          isApproved: true
          sandboxType: 6
          applicationId: 1
          useSandbox: true
          key: key
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationApiClientProfileResponse'
          nullable: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationCreatedResponse:
      additionalProperties: false
      example:
        instanceId: instanceId
        operationalContextUri: operationalContextUri
        tenantId: tenantId
        vendorId: 6
        claimSetName: claimSetName
        applicationId: 0
        applicationName: applicationName
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        applicationId:
          format: int32
          type: integer
        applicationName:
          nullable: true
          type: string
        claimSetName:
          nullable: true
          type: string
        operationalContextUri:
          nullable: true
          type: string
        vendorId:
          format: int32
          type: integer
      type: object
    EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationListResponse:
      additionalProperties: false
      example:
        edOrgsCount: 2
        operationalContextUri: operationalContextUri
        tenantId: tenantId
        vendorId: 5
        claimSetName: claimSetName
        applicationId: 5
        vendorName: vendorName
        applicationName: applicationName
      properties:
        tenantId:
          nullable: true
          type: string
        applicationId:
          format: int32
          type: integer
        applicationName:
          nullable: true
          type: string
        claimSetName:
          nullable: true
          type: string
        operationalContextUri:
          nullable: true
          type: string
        vendorId:
          format: int32
          type: integer
        vendorName:
          nullable: true
          type: string
        edOrgsCount:
          format: int32
          type: integer
      type: object
    EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationListResponsePaginatedItemsViewModel:
      additionalProperties: false
      example:
        data:
        - edOrgsCount: 2
          operationalContextUri: operationalContextUri
          tenantId: tenantId
          vendorId: 5
          claimSetName: claimSetName
          applicationId: 5
          vendorName: vendorName
          applicationName: applicationName
        - edOrgsCount: 2
          operationalContextUri: operationalContextUri
          tenantId: tenantId
          vendorId: 5
          claimSetName: claimSetName
          applicationId: 5
          vendorName: vendorName
          applicationName: applicationName
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationListResponse'
          nullable: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationProfileResponse:
      additionalProperties: false
      example:
        educationOrganizations:
        - createdByOwnershipTokenId: 9
          lastModifiedDate: lastModifiedDate
          localEducationAgencyId: 3
          nameOfInstitution: nameOfInstitution
          shortnameOfInstitution: shortnameOfInstitution
          discriminator: discriminator
          webSite: webSite
          changeVersion: 7
          schoolId: schoolId
          educationOrganizationId: 5
          operationalStatusDescriptorId: 2
          id: id
          createDate: createDate
        - createdByOwnershipTokenId: 9
          lastModifiedDate: lastModifiedDate
          localEducationAgencyId: 3
          nameOfInstitution: nameOfInstitution
          shortnameOfInstitution: shortnameOfInstitution
          discriminator: discriminator
          webSite: webSite
          changeVersion: 7
          schoolId: schoolId
          educationOrganizationId: 5
          operationalStatusDescriptorId: 2
          id: id
          createDate: createDate
        instanceId: instanceId
        operationalContextUri: operationalContextUri
        vendor:
          namespacePrefixes:
          - namespacePrefixes
          - namespacePrefixes
          vendorId: 1
          vendorName: vendorName
          applications:
          - 5
          - 5
        tenantId: tenantId
        vendorId: 6
        claimSetName: claimSetName
        applicationId: 0
        applicationName: applicationName
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        applicationId:
          format: int32
          type: integer
        applicationName:
          nullable: true
          type: string
        claimSetName:
          nullable: true
          type: string
        operationalContextUri:
          nullable: true
          type: string
        vendorId:
          format: int32
          type: integer
        vendor:
          $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.Vendor'
        educationOrganizations:
          description: TODO Is adding Vendor object which also has application object
            correct ?
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EducationOrganization'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.EdFiConnection:
      additionalProperties: false
      example:
        hostingProvider: hostingProvider
        tiers:
        - tierId: tierId
          tierName: tierName
          sqlConnection:
            azureResourceGroupName: azureResourceGroupName
            sqlServerPassword: sqlServerPassword
            azureServerName: azureServerName
            sqlServer: sqlServer
            sqlServerUserName: sqlServerUserName
            azureSubscriptionId: azureSubscriptionId
            azureServerElasticPoolName: azureServerElasticPoolName
          odsApiConnection:
            endpoints:
            - accessTypeId: accessTypeId
              resourcesUrl: resourcesUrl
              compositesUrl: compositesUrl
            - accessTypeId: accessTypeId
              resourcesUrl: resourcesUrl
              compositesUrl: compositesUrl
            clientId: clientId
            tokenUrl: tokenUrl
            metadataUrl: metadataUrl
            clientSecret: clientSecret
        - tierId: tierId
          tierName: tierName
          sqlConnection:
            azureResourceGroupName: azureResourceGroupName
            sqlServerPassword: sqlServerPassword
            azureServerName: azureServerName
            sqlServer: sqlServer
            sqlServerUserName: sqlServerUserName
            azureSubscriptionId: azureSubscriptionId
            azureServerElasticPoolName: azureServerElasticPoolName
          odsApiConnection:
            endpoints:
            - accessTypeId: accessTypeId
              resourcesUrl: resourcesUrl
              compositesUrl: compositesUrl
            - accessTypeId: accessTypeId
              resourcesUrl: resourcesUrl
              compositesUrl: compositesUrl
            clientId: clientId
            tokenUrl: tokenUrl
            metadataUrl: metadataUrl
            clientSecret: clientSecret
        lastModifiedDateTime: lastModifiedDateTime
        lastModifiedBy: lastModifiedBy
        createdDateTime: createdDateTime
        connectionType: connectionType
        databaseEngine: databaseEngine
        edFiExtension: edFiExtension
        allowedTenantIds:
        - allowedTenantIds
        - allowedTenantIds
        createdBy: createdBy
        id: id
        connectionName: connectionName
        edFiVersion: edFiVersion
      properties:
        id:
          nullable: true
          type: string
        connectionName:
          nullable: true
          type: string
        databaseEngine:
          nullable: true
          type: string
        edFiVersion:
          nullable: true
          type: string
        edFiExtension:
          nullable: true
          type: string
        hostingProvider:
          nullable: true
          type: string
        allowedTenantIds:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        tiers:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionTier'
          nullable: true
          readOnly: true
          type: array
        createdBy:
          nullable: true
          type: string
        createdDateTime:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedDateTime:
          nullable: true
          type: string
        connectionType:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionDeletedResponse:
      additionalProperties: false
      example:
        tenantId: tenantId
        connectionId: connectionId
      properties:
        connectionId:
          nullable: true
          type: string
        tenantId:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionPaginatedItemsResponse:
      additionalProperties: false
      example:
        data:
        - hostingProvider: hostingProvider
          tiers:
          - tierId: tierId
            tierName: tierName
            sqlConnection:
              azureResourceGroupName: azureResourceGroupName
              sqlServerPassword: sqlServerPassword
              azureServerName: azureServerName
              sqlServer: sqlServer
              sqlServerUserName: sqlServerUserName
              azureSubscriptionId: azureSubscriptionId
              azureServerElasticPoolName: azureServerElasticPoolName
            odsApiConnection:
              endpoints:
              - accessTypeId: accessTypeId
                resourcesUrl: resourcesUrl
                compositesUrl: compositesUrl
              - accessTypeId: accessTypeId
                resourcesUrl: resourcesUrl
                compositesUrl: compositesUrl
              clientId: clientId
              tokenUrl: tokenUrl
              metadataUrl: metadataUrl
              clientSecret: clientSecret
          - tierId: tierId
            tierName: tierName
            sqlConnection:
              azureResourceGroupName: azureResourceGroupName
              sqlServerPassword: sqlServerPassword
              azureServerName: azureServerName
              sqlServer: sqlServer
              sqlServerUserName: sqlServerUserName
              azureSubscriptionId: azureSubscriptionId
              azureServerElasticPoolName: azureServerElasticPoolName
            odsApiConnection:
              endpoints:
              - accessTypeId: accessTypeId
                resourcesUrl: resourcesUrl
                compositesUrl: compositesUrl
              - accessTypeId: accessTypeId
                resourcesUrl: resourcesUrl
                compositesUrl: compositesUrl
              clientId: clientId
              tokenUrl: tokenUrl
              metadataUrl: metadataUrl
              clientSecret: clientSecret
          lastModifiedDateTime: lastModifiedDateTime
          lastModifiedBy: lastModifiedBy
          createdDateTime: createdDateTime
          connectionType: connectionType
          databaseEngine: databaseEngine
          edFiExtension: edFiExtension
          allowedTenantIds:
          - allowedTenantIds
          - allowedTenantIds
          createdBy: createdBy
          id: id
          connectionName: connectionName
          edFiVersion: edFiVersion
        - hostingProvider: hostingProvider
          tiers:
          - tierId: tierId
            tierName: tierName
            sqlConnection:
              azureResourceGroupName: azureResourceGroupName
              sqlServerPassword: sqlServerPassword
              azureServerName: azureServerName
              sqlServer: sqlServer
              sqlServerUserName: sqlServerUserName
              azureSubscriptionId: azureSubscriptionId
              azureServerElasticPoolName: azureServerElasticPoolName
            odsApiConnection:
              endpoints:
              - accessTypeId: accessTypeId
                resourcesUrl: resourcesUrl
                compositesUrl: compositesUrl
              - accessTypeId: accessTypeId
                resourcesUrl: resourcesUrl
                compositesUrl: compositesUrl
              clientId: clientId
              tokenUrl: tokenUrl
              metadataUrl: metadataUrl
              clientSecret: clientSecret
          - tierId: tierId
            tierName: tierName
            sqlConnection:
              azureResourceGroupName: azureResourceGroupName
              sqlServerPassword: sqlServerPassword
              azureServerName: azureServerName
              sqlServer: sqlServer
              sqlServerUserName: sqlServerUserName
              azureSubscriptionId: azureSubscriptionId
              azureServerElasticPoolName: azureServerElasticPoolName
            odsApiConnection:
              endpoints:
              - accessTypeId: accessTypeId
                resourcesUrl: resourcesUrl
                compositesUrl: compositesUrl
              - accessTypeId: accessTypeId
                resourcesUrl: resourcesUrl
                compositesUrl: compositesUrl
              clientId: clientId
              tokenUrl: tokenUrl
              metadataUrl: metadataUrl
              clientSecret: clientSecret
          lastModifiedDateTime: lastModifiedDateTime
          lastModifiedBy: lastModifiedBy
          createdDateTime: createdDateTime
          connectionType: connectionType
          databaseEngine: databaseEngine
          edFiExtension: edFiExtension
          allowedTenantIds:
          - allowedTenantIds
          - allowedTenantIds
          createdBy: createdBy
          id: id
          connectionName: connectionName
          edFiVersion: edFiVersion
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiConnection'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionTier:
      additionalProperties: false
      example:
        tierId: tierId
        tierName: tierName
        sqlConnection:
          azureResourceGroupName: azureResourceGroupName
          sqlServerPassword: sqlServerPassword
          azureServerName: azureServerName
          sqlServer: sqlServer
          sqlServerUserName: sqlServerUserName
          azureSubscriptionId: azureSubscriptionId
          azureServerElasticPoolName: azureServerElasticPoolName
        odsApiConnection:
          endpoints:
          - accessTypeId: accessTypeId
            resourcesUrl: resourcesUrl
            compositesUrl: compositesUrl
          - accessTypeId: accessTypeId
            resourcesUrl: resourcesUrl
            compositesUrl: compositesUrl
          clientId: clientId
          tokenUrl: tokenUrl
          metadataUrl: metadataUrl
          clientSecret: clientSecret
      properties:
        tierId:
          nullable: true
          type: string
        tierName:
          nullable: true
          type: string
        odsApiConnection:
          $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.TierOdsApiConnection'
        sqlConnection:
          $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.TierSqlConnection'
      type: object
    EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionUpdatedResponse:
      additionalProperties: false
      example:
        tenantId: tenantId
        connectionId: connectionId
      properties:
        connectionId:
          nullable: true
          type: string
        tenantId:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.EdFiOdsBackupDescriptor:
      additionalProperties: false
      example:
        code: code
        tenantId: tenantId
        description: description
      properties:
        tenantId:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.EdFiOdsBackupDescriptorsPaginatedItemsResponse:
      additionalProperties: false
      example:
        data:
        - code: code
          tenantId: tenantId
          description: description
        - code: code
          tenantId: tenantId
          description: description
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiOdsBackupDescriptor'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.EducationOrganization:
      additionalProperties: false
      example:
        createdByOwnershipTokenId: 9
        lastModifiedDate: lastModifiedDate
        localEducationAgencyId: 3
        nameOfInstitution: nameOfInstitution
        shortnameOfInstitution: shortnameOfInstitution
        discriminator: discriminator
        webSite: webSite
        changeVersion: 7
        schoolId: schoolId
        educationOrganizationId: 5
        operationalStatusDescriptorId: 2
        id: id
        createDate: createDate
      properties:
        educationOrganizationId:
          format: int32
          type: integer
        nameOfInstitution:
          nullable: true
          type: string
        shortnameOfInstitution:
          nullable: true
          type: string
        webSite:
          nullable: true
          type: string
        operationalStatusDescriptorId:
          format: int32
          type: integer
        discriminator:
          nullable: true
          type: string
        createDate:
          nullable: true
          type: string
        lastModifiedDate:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        changeVersion:
          format: int64
          type: integer
        createdByOwnershipTokenId:
          format: int32
          type: integer
        localEducationAgencyId:
          format: int32
          type: integer
        schoolId:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.EducationOrganizationAddress:
      additionalProperties: false
      example:
        stateAbbreviationDescriptor: stateAbbreviationDescriptor
        buildingSiteNumber: buildingSiteNumber
        localeDescriptor: localeDescriptor
        city: city
        addressTypeDescriptor: addressTypeDescriptor
        postalCode: postalCode
        streetNumberName: streetNumberName
        nameOfCounty: nameOfCounty
      properties:
        addressTypeDescriptor:
          nullable: true
          type: string
        stateAbbreviationDescriptor:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        postalCode:
          nullable: true
          type: string
        streetNumberName:
          nullable: true
          type: string
        localeDescriptor:
          nullable: true
          type: string
        buildingSiteNumber:
          nullable: true
          type: string
        nameOfCounty:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.EducationOrganizationCategoryDescriptor:
      additionalProperties: false
      example:
        educationOrganizationCategoryDescriptorId: 5
        namespace: namespace
        description: description
        id: id
        shortDescription: shortDescription
        codeValue: codeValue
      properties:
        id:
          nullable: true
          type: string
        educationOrganizationCategoryDescriptorId:
          format: int32
          type: integer
        codeValue:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        shortDescription:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.EducationServiceCenter:
      additionalProperties: false
      example:
        educationOrganizationCategoryDescriptors:
        - educationOrganizationCategoryDescriptors
        - educationOrganizationCategoryDescriptors
        id: id
        educationServiceCenterId: 0
        nameOfInstitution: nameOfInstitution
      properties:
        id:
          nullable: true
          type: string
        educationServiceCenterId:
          format: int32
          type: integer
        nameOfInstitution:
          nullable: true
          type: string
        educationOrganizationCategoryDescriptors:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.EducationServiceCenterCreatedResponse:
      additionalProperties: false
      example:
        instanceId: instanceId
        tenantId: tenantId
        id: id
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.GenderRepresentation:
      additionalProperties: false
      example:
        instanceId: instanceId
        percentOfTotal: 1.4658129805029452
        displayName: displayName
        tenantId: tenantId
        value: value
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
        percentOfTotal:
          format: double
          type: number
        displayName:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.GenerateReportsResponse:
      additionalProperties: false
      example:
        instanceId: instanceId
        tenantId: tenantId
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.GetLocalEducationAgencyProfileResponse:
      additionalProperties: false
      example:
        localEducationAgency:
          addresses:
          - stateAbbreviationDescriptor: stateAbbreviationDescriptor
            buildingSiteNumber: buildingSiteNumber
            localeDescriptor: localeDescriptor
            city: city
            addressTypeDescriptor: addressTypeDescriptor
            postalCode: postalCode
            streetNumberName: streetNumberName
            nameOfCounty: nameOfCounty
          - stateAbbreviationDescriptor: stateAbbreviationDescriptor
            buildingSiteNumber: buildingSiteNumber
            localeDescriptor: localeDescriptor
            city: city
            addressTypeDescriptor: addressTypeDescriptor
            postalCode: postalCode
            streetNumberName: streetNumberName
            nameOfCounty: nameOfCounty
          localEducationAgencyCategoryDescriptorCodeValue: localEducationAgencyCategoryDescriptorCodeValue
          lastModifiedDate: lastModifiedDate
          localEducationAgencyId: 6
          nameOfInstitution: nameOfInstitution
          shortnameOfInstitution: shortnameOfInstitution
          discriminator: discriminator
          webSite: webSite
          instanceId: instanceId
          tenantId: tenantId
          educationOrganizationId: 0
          operationalStatusDescriptorId: 1
          categories:
          - educationOrganizationCategoryDescriptorId: 5
            namespace: namespace
            description: description
            id: id
            shortDescription: shortDescription
            codeValue: codeValue
          - educationOrganizationCategoryDescriptorId: 5
            namespace: namespace
            description: description
            id: id
            shortDescription: shortDescription
            codeValue: codeValue
          id: id
          createDate: createDate
      properties:
        localEducationAgency:
          $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgency'
      type: object
    EdfiAdminApi.EdfiAdmin.V1.GetResourceClaimsGridResponse:
      additionalProperties: false
      example:
        resourceClaims:
        - read: true
          children:
          - null
          - null
          name: name
          createAuthStrategy: createAuthStrategy
          create: true
          update: true
          resourceClaimId: 0
          readAuthStrategy: readAuthStrategy
          delete: true
          deleteAuthStrategy: deleteAuthStrategy
          updateAuthStrategy: updateAuthStrategy
        - read: true
          children:
          - null
          - null
          name: name
          createAuthStrategy: createAuthStrategy
          create: true
          update: true
          resourceClaimId: 0
          readAuthStrategy: readAuthStrategy
          delete: true
          deleteAuthStrategy: deleteAuthStrategy
          updateAuthStrategy: updateAuthStrategy
        instanceId: instanceId
        tenantId: tenantId
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        resourceClaims:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ResourceClaim'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.Instance:
      additionalProperties: false
      example:
        databases:
          security:
            selectedTierName: selectedTierName
            selectedTierId: selectedTierId
            jobs:
              generateReportsJobId: generateReportsJobId
              deleteJobId: deleteJobId
              createJobId: createJobId
              resetCreateJobId: resetCreateJobId
              resetDeleteJobId: resetDeleteJobId
            status: status
          admin:
            selectedTierName: selectedTierName
            selectedTierId: selectedTierId
            jobs:
              generateReportsJobId: generateReportsJobId
              deleteJobId: deleteJobId
              createJobId: createJobId
              resetCreateJobId: resetCreateJobId
              resetDeleteJobId: resetDeleteJobId
            status: status
          ods:
          - selectedTierName: selectedTierName
            odsBackupCode: odsBackupCode
            selectedTierId: selectedTierId
            year: 0
            odsBackupDescription: odsBackupDescription
            jobs:
              generateReportsJobId: generateReportsJobId
              deleteJobId: deleteJobId
              createJobId: createJobId
              resetCreateJobId: resetCreateJobId
              resetDeleteJobId: resetDeleteJobId
            status: status
          - selectedTierName: selectedTierName
            odsBackupCode: odsBackupCode
            selectedTierId: selectedTierId
            year: 0
            odsBackupDescription: odsBackupDescription
            jobs:
              generateReportsJobId: generateReportsJobId
              deleteJobId: deleteJobId
              createJobId: createJobId
              resetCreateJobId: resetCreateJobId
              resetDeleteJobId: resetDeleteJobId
            status: status
        apiAuthUrl: apiAuthUrl
        apiClientSecret: apiClientSecret
        lastModifiedDateTime: lastModifiedDateTime
        instanceName: instanceName
        apiResourcesUrls:
        - apiResourcesUrls
        - apiResourcesUrls
        lastModifiedBy: lastModifiedBy
        description: description
        createdDateTime: createdDateTime
        apiClientKey: apiClientKey
        useCustomId: true
        customId: customId
        password: password
        isDefault: true
        isApiClientSecretSecured: isApiClientSecretSecured
        isDeleted: true
        createdBy: createdBy
        selectedConnection:
          hostingProvider: hostingProvider
          tiers:
          - tierId: tierId
            tierName: tierName
            sqlConnection:
              azureResourceGroupName: azureResourceGroupName
              sqlServerPassword: sqlServerPassword
              azureServerName: azureServerName
              sqlServer: sqlServer
              sqlServerUserName: sqlServerUserName
              azureSubscriptionId: azureSubscriptionId
              azureServerElasticPoolName: azureServerElasticPoolName
            odsApiConnection:
              endpoints:
              - accessTypeId: accessTypeId
                resourcesUrl: resourcesUrl
                compositesUrl: compositesUrl
              - accessTypeId: accessTypeId
                resourcesUrl: resourcesUrl
                compositesUrl: compositesUrl
              clientId: clientId
              tokenUrl: tokenUrl
              metadataUrl: metadataUrl
              clientSecret: clientSecret
          - tierId: tierId
            tierName: tierName
            sqlConnection:
              azureResourceGroupName: azureResourceGroupName
              sqlServerPassword: sqlServerPassword
              azureServerName: azureServerName
              sqlServer: sqlServer
              sqlServerUserName: sqlServerUserName
              azureSubscriptionId: azureSubscriptionId
              azureServerElasticPoolName: azureServerElasticPoolName
            odsApiConnection:
              endpoints:
              - accessTypeId: accessTypeId
                resourcesUrl: resourcesUrl
                compositesUrl: compositesUrl
              - accessTypeId: accessTypeId
                resourcesUrl: resourcesUrl
                compositesUrl: compositesUrl
              clientId: clientId
              tokenUrl: tokenUrl
              metadataUrl: metadataUrl
              clientSecret: clientSecret
          lastModifiedDateTime: lastModifiedDateTime
          lastModifiedBy: lastModifiedBy
          createdDateTime: createdDateTime
          connectionType: connectionType
          databaseEngine: databaseEngine
          edFiExtension: edFiExtension
          allowedTenantIds:
          - allowedTenantIds
          - allowedTenantIds
          createdBy: createdBy
          id: id
          connectionName: connectionName
          edFiVersion: edFiVersion
        tenantId: tenantId
        id: id
        connectionName: connectionName
        apiCompositesUrls:
        - apiCompositesUrls
        - apiCompositesUrls
        selectedConnectionId: selectedConnectionId
        selectedConnectionType: selectedConnectionType
      properties:
        id:
          description: Details
          nullable: true
          type: string
        instanceName:
          nullable: true
          type: string
        useCustomId:
          type: boolean
        customId:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        connectionName:
          nullable: true
          type: string
        selectedConnectionId:
          description: Connection
          nullable: true
          type: string
        selectedConnection:
          $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiConnection'
        databases:
          $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabases'
        password:
          description: API Client
          nullable: true
          type: string
        apiClientKey:
          nullable: true
          type: string
        apiClientSecret:
          nullable: true
          type: string
        isApiClientSecretSecured:
          nullable: true
          type: string
        tenantId:
          description: Metadata
          nullable: true
          type: string
        createdBy:
          nullable: true
          type: string
        createdDateTime:
          nullable: true
          type: string
        isDeleted:
          type: boolean
        lastModifiedBy:
          nullable: true
          type: string
        lastModifiedDateTime:
          nullable: true
          type: string
        apiAuthUrl:
          description: URLs
          nullable: true
          type: string
        apiResourcesUrls:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        apiCompositesUrls:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        selectedConnectionType:
          description: Connection
          nullable: true
          type: string
        isDefault:
          description: IsDefault
          nullable: true
          type: boolean
      type: object
    EdfiAdminApi.EdfiAdmin.V1.InstanceDatabase:
      additionalProperties: false
      example:
        selectedTierName: selectedTierName
        selectedTierId: selectedTierId
        jobs:
          generateReportsJobId: generateReportsJobId
          deleteJobId: deleteJobId
          createJobId: createJobId
          resetCreateJobId: resetCreateJobId
          resetDeleteJobId: resetDeleteJobId
        status: status
      properties:
        selectedTierId:
          nullable: true
          type: string
        selectedTierName:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        jobs:
          $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabaseJobs'
      type: object
    EdfiAdminApi.EdfiAdmin.V1.InstanceDatabaseJobs:
      additionalProperties: false
      example:
        generateReportsJobId: generateReportsJobId
        deleteJobId: deleteJobId
        createJobId: createJobId
        resetCreateJobId: resetCreateJobId
        resetDeleteJobId: resetDeleteJobId
      properties:
        createJobId:
          nullable: true
          type: string
        deleteJobId:
          nullable: true
          type: string
        resetDeleteJobId:
          nullable: true
          type: string
        resetCreateJobId:
          nullable: true
          type: string
        generateReportsJobId:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.InstanceDatabases:
      additionalProperties: false
      example:
        security:
          selectedTierName: selectedTierName
          selectedTierId: selectedTierId
          jobs:
            generateReportsJobId: generateReportsJobId
            deleteJobId: deleteJobId
            createJobId: createJobId
            resetCreateJobId: resetCreateJobId
            resetDeleteJobId: resetDeleteJobId
          status: status
        admin:
          selectedTierName: selectedTierName
          selectedTierId: selectedTierId
          jobs:
            generateReportsJobId: generateReportsJobId
            deleteJobId: deleteJobId
            createJobId: createJobId
            resetCreateJobId: resetCreateJobId
            resetDeleteJobId: resetDeleteJobId
          status: status
        ods:
        - selectedTierName: selectedTierName
          odsBackupCode: odsBackupCode
          selectedTierId: selectedTierId
          year: 0
          odsBackupDescription: odsBackupDescription
          jobs:
            generateReportsJobId: generateReportsJobId
            deleteJobId: deleteJobId
            createJobId: createJobId
            resetCreateJobId: resetCreateJobId
            resetDeleteJobId: resetDeleteJobId
          status: status
        - selectedTierName: selectedTierName
          odsBackupCode: odsBackupCode
          selectedTierId: selectedTierId
          year: 0
          odsBackupDescription: odsBackupDescription
          jobs:
            generateReportsJobId: generateReportsJobId
            deleteJobId: deleteJobId
            createJobId: createJobId
            resetCreateJobId: resetCreateJobId
            resetDeleteJobId: resetDeleteJobId
          status: status
      properties:
        admin:
          $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabase'
        security:
          $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabase'
        ods:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceOdsDatabase'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.InstanceEndpointsResponse:
      additionalProperties: false
      example:
        compositesUrls:
        - accessType: accessType
          url: url
        - accessType: accessType
          url: url
        authUrl: authUrl
        resourcesUrls:
        - accessType: accessType
          url: url
        - accessType: accessType
          url: url
      properties:
        authUrl:
          nullable: true
          type: string
        resourcesUrls:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ApplicationEndpoint'
          nullable: true
          readOnly: true
          type: array
        compositesUrls:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ApplicationEndpoint'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.InstanceOdsDatabase:
      additionalProperties: false
      example:
        selectedTierName: selectedTierName
        odsBackupCode: odsBackupCode
        selectedTierId: selectedTierId
        year: 0
        odsBackupDescription: odsBackupDescription
        jobs:
          generateReportsJobId: generateReportsJobId
          deleteJobId: deleteJobId
          createJobId: createJobId
          resetCreateJobId: resetCreateJobId
          resetDeleteJobId: resetDeleteJobId
        status: status
      properties:
        selectedTierId:
          nullable: true
          type: string
        selectedTierName:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        jobs:
          $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabaseJobs'
        year:
          format: int32
          type: integer
        odsBackupCode:
          nullable: true
          type: string
        odsBackupDescription:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.InstancePaginatedItemsViewModel:
      additionalProperties: false
      example:
        data:
        - databases:
            security:
              selectedTierName: selectedTierName
              selectedTierId: selectedTierId
              jobs:
                generateReportsJobId: generateReportsJobId
                deleteJobId: deleteJobId
                createJobId: createJobId
                resetCreateJobId: resetCreateJobId
                resetDeleteJobId: resetDeleteJobId
              status: status
            admin:
              selectedTierName: selectedTierName
              selectedTierId: selectedTierId
              jobs:
                generateReportsJobId: generateReportsJobId
                deleteJobId: deleteJobId
                createJobId: createJobId
                resetCreateJobId: resetCreateJobId
                resetDeleteJobId: resetDeleteJobId
              status: status
            ods:
            - selectedTierName: selectedTierName
              odsBackupCode: odsBackupCode
              selectedTierId: selectedTierId
              year: 0
              odsBackupDescription: odsBackupDescription
              jobs:
                generateReportsJobId: generateReportsJobId
                deleteJobId: deleteJobId
                createJobId: createJobId
                resetCreateJobId: resetCreateJobId
                resetDeleteJobId: resetDeleteJobId
              status: status
            - selectedTierName: selectedTierName
              odsBackupCode: odsBackupCode
              selectedTierId: selectedTierId
              year: 0
              odsBackupDescription: odsBackupDescription
              jobs:
                generateReportsJobId: generateReportsJobId
                deleteJobId: deleteJobId
                createJobId: createJobId
                resetCreateJobId: resetCreateJobId
                resetDeleteJobId: resetDeleteJobId
              status: status
          apiAuthUrl: apiAuthUrl
          apiClientSecret: apiClientSecret
          lastModifiedDateTime: lastModifiedDateTime
          instanceName: instanceName
          apiResourcesUrls:
          - apiResourcesUrls
          - apiResourcesUrls
          lastModifiedBy: lastModifiedBy
          description: description
          createdDateTime: createdDateTime
          apiClientKey: apiClientKey
          useCustomId: true
          customId: customId
          password: password
          isDefault: true
          isApiClientSecretSecured: isApiClientSecretSecured
          isDeleted: true
          createdBy: createdBy
          selectedConnection:
            hostingProvider: hostingProvider
            tiers:
            - tierId: tierId
              tierName: tierName
              sqlConnection:
                azureResourceGroupName: azureResourceGroupName
                sqlServerPassword: sqlServerPassword
                azureServerName: azureServerName
                sqlServer: sqlServer
                sqlServerUserName: sqlServerUserName
                azureSubscriptionId: azureSubscriptionId
                azureServerElasticPoolName: azureServerElasticPoolName
              odsApiConnection:
                endpoints:
                - accessTypeId: accessTypeId
                  resourcesUrl: resourcesUrl
                  compositesUrl: compositesUrl
                - accessTypeId: accessTypeId
                  resourcesUrl: resourcesUrl
                  compositesUrl: compositesUrl
                clientId: clientId
                tokenUrl: tokenUrl
                metadataUrl: metadataUrl
                clientSecret: clientSecret
            - tierId: tierId
              tierName: tierName
              sqlConnection:
                azureResourceGroupName: azureResourceGroupName
                sqlServerPassword: sqlServerPassword
                azureServerName: azureServerName
                sqlServer: sqlServer
                sqlServerUserName: sqlServerUserName
                azureSubscriptionId: azureSubscriptionId
                azureServerElasticPoolName: azureServerElasticPoolName
              odsApiConnection:
                endpoints:
                - accessTypeId: accessTypeId
                  resourcesUrl: resourcesUrl
                  compositesUrl: compositesUrl
                - accessTypeId: accessTypeId
                  resourcesUrl: resourcesUrl
                  compositesUrl: compositesUrl
                clientId: clientId
                tokenUrl: tokenUrl
                metadataUrl: metadataUrl
                clientSecret: clientSecret
            lastModifiedDateTime: lastModifiedDateTime
            lastModifiedBy: lastModifiedBy
            createdDateTime: createdDateTime
            connectionType: connectionType
            databaseEngine: databaseEngine
            edFiExtension: edFiExtension
            allowedTenantIds:
            - allowedTenantIds
            - allowedTenantIds
            createdBy: createdBy
            id: id
            connectionName: connectionName
            edFiVersion: edFiVersion
          tenantId: tenantId
          id: id
          connectionName: connectionName
          apiCompositesUrls:
          - apiCompositesUrls
          - apiCompositesUrls
          selectedConnectionId: selectedConnectionId
          selectedConnectionType: selectedConnectionType
        - databases:
            security:
              selectedTierName: selectedTierName
              selectedTierId: selectedTierId
              jobs:
                generateReportsJobId: generateReportsJobId
                deleteJobId: deleteJobId
                createJobId: createJobId
                resetCreateJobId: resetCreateJobId
                resetDeleteJobId: resetDeleteJobId
              status: status
            admin:
              selectedTierName: selectedTierName
              selectedTierId: selectedTierId
              jobs:
                generateReportsJobId: generateReportsJobId
                deleteJobId: deleteJobId
                createJobId: createJobId
                resetCreateJobId: resetCreateJobId
                resetDeleteJobId: resetDeleteJobId
              status: status
            ods:
            - selectedTierName: selectedTierName
              odsBackupCode: odsBackupCode
              selectedTierId: selectedTierId
              year: 0
              odsBackupDescription: odsBackupDescription
              jobs:
                generateReportsJobId: generateReportsJobId
                deleteJobId: deleteJobId
                createJobId: createJobId
                resetCreateJobId: resetCreateJobId
                resetDeleteJobId: resetDeleteJobId
              status: status
            - selectedTierName: selectedTierName
              odsBackupCode: odsBackupCode
              selectedTierId: selectedTierId
              year: 0
              odsBackupDescription: odsBackupDescription
              jobs:
                generateReportsJobId: generateReportsJobId
                deleteJobId: deleteJobId
                createJobId: createJobId
                resetCreateJobId: resetCreateJobId
                resetDeleteJobId: resetDeleteJobId
              status: status
          apiAuthUrl: apiAuthUrl
          apiClientSecret: apiClientSecret
          lastModifiedDateTime: lastModifiedDateTime
          instanceName: instanceName
          apiResourcesUrls:
          - apiResourcesUrls
          - apiResourcesUrls
          lastModifiedBy: lastModifiedBy
          description: description
          createdDateTime: createdDateTime
          apiClientKey: apiClientKey
          useCustomId: true
          customId: customId
          password: password
          isDefault: true
          isApiClientSecretSecured: isApiClientSecretSecured
          isDeleted: true
          createdBy: createdBy
          selectedConnection:
            hostingProvider: hostingProvider
            tiers:
            - tierId: tierId
              tierName: tierName
              sqlConnection:
                azureResourceGroupName: azureResourceGroupName
                sqlServerPassword: sqlServerPassword
                azureServerName: azureServerName
                sqlServer: sqlServer
                sqlServerUserName: sqlServerUserName
                azureSubscriptionId: azureSubscriptionId
                azureServerElasticPoolName: azureServerElasticPoolName
              odsApiConnection:
                endpoints:
                - accessTypeId: accessTypeId
                  resourcesUrl: resourcesUrl
                  compositesUrl: compositesUrl
                - accessTypeId: accessTypeId
                  resourcesUrl: resourcesUrl
                  compositesUrl: compositesUrl
                clientId: clientId
                tokenUrl: tokenUrl
                metadataUrl: metadataUrl
                clientSecret: clientSecret
            - tierId: tierId
              tierName: tierName
              sqlConnection:
                azureResourceGroupName: azureResourceGroupName
                sqlServerPassword: sqlServerPassword
                azureServerName: azureServerName
                sqlServer: sqlServer
                sqlServerUserName: sqlServerUserName
                azureSubscriptionId: azureSubscriptionId
                azureServerElasticPoolName: azureServerElasticPoolName
              odsApiConnection:
                endpoints:
                - accessTypeId: accessTypeId
                  resourcesUrl: resourcesUrl
                  compositesUrl: compositesUrl
                - accessTypeId: accessTypeId
                  resourcesUrl: resourcesUrl
                  compositesUrl: compositesUrl
                clientId: clientId
                tokenUrl: tokenUrl
                metadataUrl: metadataUrl
                clientSecret: clientSecret
            lastModifiedDateTime: lastModifiedDateTime
            lastModifiedBy: lastModifiedBy
            createdDateTime: createdDateTime
            connectionType: connectionType
            databaseEngine: databaseEngine
            edFiExtension: edFiExtension
            allowedTenantIds:
            - allowedTenantIds
            - allowedTenantIds
            createdBy: createdBy
            id: id
            connectionName: connectionName
            edFiVersion: edFiVersion
          tenantId: tenantId
          id: id
          connectionName: connectionName
          apiCompositesUrls:
          - apiCompositesUrls
          - apiCompositesUrls
          selectedConnectionId: selectedConnectionId
          selectedConnectionType: selectedConnectionType
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.Instance'
          nullable: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgency:
      additionalProperties: false
      example:
        addresses:
        - stateAbbreviationDescriptor: stateAbbreviationDescriptor
          buildingSiteNumber: buildingSiteNumber
          localeDescriptor: localeDescriptor
          city: city
          addressTypeDescriptor: addressTypeDescriptor
          postalCode: postalCode
          streetNumberName: streetNumberName
          nameOfCounty: nameOfCounty
        - stateAbbreviationDescriptor: stateAbbreviationDescriptor
          buildingSiteNumber: buildingSiteNumber
          localeDescriptor: localeDescriptor
          city: city
          addressTypeDescriptor: addressTypeDescriptor
          postalCode: postalCode
          streetNumberName: streetNumberName
          nameOfCounty: nameOfCounty
        localEducationAgencyCategoryDescriptorCodeValue: localEducationAgencyCategoryDescriptorCodeValue
        lastModifiedDate: lastModifiedDate
        localEducationAgencyId: 6
        nameOfInstitution: nameOfInstitution
        shortnameOfInstitution: shortnameOfInstitution
        discriminator: discriminator
        webSite: webSite
        instanceId: instanceId
        tenantId: tenantId
        educationOrganizationId: 0
        operationalStatusDescriptorId: 1
        categories:
        - educationOrganizationCategoryDescriptorId: 5
          namespace: namespace
          description: description
          id: id
          shortDescription: shortDescription
          codeValue: codeValue
        - educationOrganizationCategoryDescriptorId: 5
          namespace: namespace
          description: description
          id: id
          shortDescription: shortDescription
          codeValue: codeValue
        id: id
        createDate: createDate
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        educationOrganizationId:
          format: int32
          type: integer
        localEducationAgencyId:
          format: int32
          type: integer
        nameOfInstitution:
          nullable: true
          type: string
        shortnameOfInstitution:
          nullable: true
          type: string
        webSite:
          nullable: true
          type: string
        operationalStatusDescriptorId:
          format: int32
          type: integer
        discriminator:
          nullable: true
          type: string
        createDate:
          nullable: true
          type: string
        lastModifiedDate:
          nullable: true
          type: string
        addresses:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EducationOrganizationAddress'
          nullable: true
          readOnly: true
          type: array
        categories:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EducationOrganizationCategoryDescriptor'
          nullable: true
          readOnly: true
          type: array
        localEducationAgencyCategoryDescriptorCodeValue:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgencyCreatedResponse:
      additionalProperties: false
      example:
        instanceId: instanceId
        tenantId: tenantId
        localEducationAgency:
          addresses:
          - stateAbbreviationDescriptor: stateAbbreviationDescriptor
            buildingSiteNumber: buildingSiteNumber
            localeDescriptor: localeDescriptor
            city: city
            addressTypeDescriptor: addressTypeDescriptor
            postalCode: postalCode
            streetNumberName: streetNumberName
            nameOfCounty: nameOfCounty
          - stateAbbreviationDescriptor: stateAbbreviationDescriptor
            buildingSiteNumber: buildingSiteNumber
            localeDescriptor: localeDescriptor
            city: city
            addressTypeDescriptor: addressTypeDescriptor
            postalCode: postalCode
            streetNumberName: streetNumberName
            nameOfCounty: nameOfCounty
          localEducationAgencyCategoryDescriptorCodeValue: localEducationAgencyCategoryDescriptorCodeValue
          lastModifiedDate: lastModifiedDate
          localEducationAgencyId: 6
          nameOfInstitution: nameOfInstitution
          shortnameOfInstitution: shortnameOfInstitution
          discriminator: discriminator
          webSite: webSite
          instanceId: instanceId
          tenantId: tenantId
          educationOrganizationId: 0
          operationalStatusDescriptorId: 1
          categories:
          - educationOrganizationCategoryDescriptorId: 5
            namespace: namespace
            description: description
            id: id
            shortDescription: shortDescription
            codeValue: codeValue
          - educationOrganizationCategoryDescriptorId: 5
            namespace: namespace
            description: description
            id: id
            shortDescription: shortDescription
            codeValue: codeValue
          id: id
          createDate: createDate
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        localEducationAgency:
          $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgency'
      type: object
    EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgencyTableViewResponse:
      additionalProperties: false
      example:
        instanceId: instanceId
        educationOrganizationCategory: educationOrganizationCategory
        tenantId: tenantId
        educationOrganizationId: 5
        id: id
        nameOfInstitution: nameOfInstitution
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        educationOrganizationId:
          format: int64
          type: integer
        id:
          nullable: true
          type: string
        nameOfInstitution:
          nullable: true
          type: string
        educationOrganizationCategory:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgencyTableViewResponsePaginatedItemsViewModel:
      additionalProperties: false
      example:
        data:
        - instanceId: instanceId
          educationOrganizationCategory: educationOrganizationCategory
          tenantId: tenantId
          educationOrganizationId: 5
          id: id
          nameOfInstitution: nameOfInstitution
        - instanceId: instanceId
          educationOrganizationCategory: educationOrganizationCategory
          tenantId: tenantId
          educationOrganizationId: 5
          id: id
          nameOfInstitution: nameOfInstitution
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgencyTableViewResponse'
          nullable: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.OdsApiConnectionEndpoint:
      additionalProperties: false
      example:
        accessTypeId: accessTypeId
        resourcesUrl: resourcesUrl
        compositesUrl: compositesUrl
      properties:
        accessTypeId:
          nullable: true
          type: string
        compositesUrl:
          nullable: true
          type: string
        resourcesUrl:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.RaceRepresentation:
      additionalProperties: false
      example:
        instanceId: instanceId
        percentOfTotal: 1.4658129805029452
        displayName: displayName
        tenantId: tenantId
        value: value
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
        percentOfTotal:
          format: double
          type: number
        displayName:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.RegenerateApiClientSecretResponse:
      additionalProperties: false
      example:
        instanceId: instanceId
        newSecret: newSecret
        tenantId: tenantId
        apiClientId: 0
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        apiClientId:
          format: int32
          type: integer
        newSecret:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.ReportsStatusResponse:
      additionalProperties: false
      example:
        districtTotalEnrollmentsReport: true
        instanceId: instanceId
        tenantId: tenantId
        studentDemographicsReport: true
        districtSchoolsByTypeReport: true
        studentsByProgramReport: true
        studentEconomicSituationReport: true
        localEducationAgenciesReport: true
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        districtSchoolsByTypeReport:
          type: boolean
        districtTotalEnrollmentsReport:
          type: boolean
        localEducationAgenciesReport:
          type: boolean
        studentDemographicsReport:
          type: boolean
        studentEconomicSituationReport:
          type: boolean
        studentsByProgramReport:
          type: boolean
      type: object
    EdfiAdminApi.EdfiAdmin.V1.ResetInstanceResponse:
      additionalProperties: false
      example:
        instanceId: instanceId
        tenantId: tenantId
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.ResourceClaim:
      additionalProperties: false
      example:
        read: true
        children:
        - null
        - null
        name: name
        createAuthStrategy: createAuthStrategy
        create: true
        update: true
        resourceClaimId: 0
        readAuthStrategy: readAuthStrategy
        delete: true
        deleteAuthStrategy: deleteAuthStrategy
        updateAuthStrategy: updateAuthStrategy
      properties:
        resourceClaimId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        create:
          type: boolean
        createAuthStrategy:
          nullable: true
          type: string
        read:
          type: boolean
        readAuthStrategy:
          nullable: true
          type: string
        update:
          type: boolean
        updateAuthStrategy:
          nullable: true
          type: string
        delete:
          type: boolean
        deleteAuthStrategy:
          nullable: true
          type: string
        children:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ResourceClaim'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        claimSetId:
          format: int32
          type: integer
        claimSetName:
          nullable: true
          type: string
        applicationId:
          format: int32
          type: integer
        resourceClaims:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ClaimSetDetailsResourceClaim'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetResponse:
      additionalProperties: false
      example:
        instanceId: instanceId
        claimSetId: 0
        tenantId: tenantId
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        claimSetId:
          format: int32
          type: integer
      type: object
    EdfiAdminApi.EdfiAdmin.V1.SchoolCountRepresentation:
      additionalProperties: false
      example:
        count: 0
        description: description
      properties:
        description:
          nullable: true
          type: string
        count:
          format: int32
          type: integer
      type: object
    EdfiAdminApi.EdfiAdmin.V1.SchoolsByTypeReportResponse:
      additionalProperties: false
      example:
        instanceId: instanceId
        tenantId: tenantId
        schoolCountRepresentations:
        - count: 0
          description: description
        - count: 0
          description: description
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        schoolCountRepresentations:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SchoolCountRepresentation'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.SetInstanceIsDefaultRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        isDefault:
          type: boolean
      type: object
    EdfiAdminApi.EdfiAdmin.V1.StateEducationAgency:
      additionalProperties: false
      example:
        educationOrganizationCategoryDescriptors:
        - educationOrganizationCategoryDescriptors
        - educationOrganizationCategoryDescriptors
        id: id
        stateEducationAgencyId: 0
        nameOfInstitution: nameOfInstitution
      properties:
        id:
          nullable: true
          type: string
        stateEducationAgencyId:
          format: int32
          type: integer
        nameOfInstitution:
          nullable: true
          type: string
        educationOrganizationCategoryDescriptors:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.StateEducationAgencyCreatedResponse:
      additionalProperties: false
      example:
        instanceId: instanceId
        tenantId: tenantId
        id: id
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.StudentEconomicSituationReportResponse:
      additionalProperties: false
      example:
        localEducationAgencyName: localEducationAgencyName
        studentEconomicSituationRepresentation:
        - percentOfTotal: 1.4658129805029452
          description: description
        - percentOfTotal: 1.4658129805029452
          description: description
        instanceId: instanceId
        tenantId: tenantId
        totalStudentCount: 6
        localEducationAgencyId: 0
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        localEducationAgencyId:
          format: int32
          type: integer
        localEducationAgencyName:
          nullable: true
          type: string
        totalStudentCount:
          format: int32
          type: integer
        studentEconomicSituationRepresentation:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentEconomicSituationRepresentation'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.StudentEconomicSituationRepresentation:
      additionalProperties: false
      example:
        percentOfTotal: 1.4658129805029452
        description: description
      properties:
        description:
          nullable: true
          type: string
        percentOfTotal:
          format: double
          type: number
      type: object
    EdfiAdminApi.EdfiAdmin.V1.StudentEnrollmentByEthnicityReportResponse:
      additionalProperties: false
      example:
        localEducationAgencyName: localEducationAgencyName
        instanceId: instanceId
        hispanicLatinoPercent: 1.4658129805029452
        tenantId: tenantId
        totalStudentCount: 6
        localEducationAgencyId: 0
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        localEducationAgencyId:
          format: int32
          type: integer
        localEducationAgencyName:
          nullable: true
          type: string
        totalStudentCount:
          format: int32
          type: integer
        hispanicLatinoPercent:
          format: double
          type: number
      type: object
    EdfiAdminApi.EdfiAdmin.V1.StudentEnrollmentByGenderReportResponse:
      additionalProperties: false
      example:
        localEducationAgencyName: localEducationAgencyName
        instanceId: instanceId
        genderRepresentation:
        - instanceId: instanceId
          percentOfTotal: 1.4658129805029452
          displayName: displayName
          tenantId: tenantId
          value: value
        - instanceId: instanceId
          percentOfTotal: 1.4658129805029452
          displayName: displayName
          tenantId: tenantId
          value: value
        tenantId: tenantId
        totalStudentCount: 6
        localEducationAgencyId: 0
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        localEducationAgencyId:
          format: int32
          type: integer
        localEducationAgencyName:
          nullable: true
          type: string
        totalStudentCount:
          format: int32
          type: integer
        genderRepresentation:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.GenderRepresentation'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.StudentEnrollmentByRaceReportResponse:
      additionalProperties: false
      example:
        localEducationAgencyName: localEducationAgencyName
        instanceId: instanceId
        tenantId: tenantId
        raceRepresentation:
        - instanceId: instanceId
          percentOfTotal: 1.4658129805029452
          displayName: displayName
          tenantId: tenantId
          value: value
        - instanceId: instanceId
          percentOfTotal: 1.4658129805029452
          displayName: displayName
          tenantId: tenantId
          value: value
        totalStudentCount: 6
        localEducationAgencyId: 0
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        localEducationAgencyId:
          format: int32
          type: integer
        localEducationAgencyName:
          nullable: true
          type: string
        totalStudentCount:
          format: int32
          type: integer
        raceRepresentation:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.RaceRepresentation'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.StudentProgramRepresentation:
      additionalProperties: false
      example:
        programName: programName
        percentOfTotalStudents: 1.4658129805029452
      properties:
        programName:
          nullable: true
          type: string
        percentOfTotalStudents:
          format: double
          type: number
      type: object
    EdfiAdminApi.EdfiAdmin.V1.StudentsByProgramReportResponse:
      additionalProperties: false
      example:
        studentProgramRepresentations:
        - programName: programName
          percentOfTotalStudents: 1.4658129805029452
        - programName: programName
          percentOfTotalStudents: 1.4658129805029452
        localEducationAgencyName: localEducationAgencyName
        instanceId: instanceId
        tenantId: tenantId
        totalStudentCount: 6
        localEducationAgencyId: 0
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        localEducationAgencyId:
          format: int32
          type: integer
        localEducationAgencyName:
          nullable: true
          type: string
        totalStudentCount:
          format: int32
          type: integer
        studentProgramRepresentations:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentProgramRepresentation'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.SyncApplicationRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        year:
          format: int32
          nullable: true
          type: integer
        applicationId:
          format: int32
          type: integer
        entries:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncEntry'
          nullable: true
          readOnly: true
          type: array
        assignToExistingLeas:
          type: boolean
      type: object
    EdfiAdminApi.EdfiAdmin.V1.SyncClaimSetRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        year:
          format: int32
          nullable: true
          type: integer
        claimSetId:
          format: int32
          type: integer
        entries:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncEntry'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.SyncEntry:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        instances:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.SyncLocalEducationAgencyRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        year:
          format: int32
          nullable: true
          type: integer
        edOrgId:
          format: int32
          type: integer
        edOrgGuid:
          nullable: true
          type: string
        entries:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncEntry'
          nullable: true
          readOnly: true
          type: array
        assignToExistingApplications:
          type: boolean
      type: object
    EdfiAdminApi.EdfiAdmin.V1.SyncResponse:
      additionalProperties: false
      example:
        instanceId: instanceId
        tenantId: tenantId
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.SyncVendorRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        year:
          format: int32
          nullable: true
          type: integer
        vendorId:
          format: int32
          type: integer
        entries:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncEntry'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.TestInstanceConnectionResponse:
      additionalProperties: false
      example:
        details: details
        status: status
      properties:
        status:
          nullable: true
          type: string
        details:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.TierOdsApiConnection:
      additionalProperties: false
      example:
        endpoints:
        - accessTypeId: accessTypeId
          resourcesUrl: resourcesUrl
          compositesUrl: compositesUrl
        - accessTypeId: accessTypeId
          resourcesUrl: resourcesUrl
          compositesUrl: compositesUrl
        clientId: clientId
        tokenUrl: tokenUrl
        metadataUrl: metadataUrl
        clientSecret: clientSecret
      properties:
        clientId:
          nullable: true
          type: string
        clientSecret:
          nullable: true
          type: string
        tokenUrl:
          nullable: true
          type: string
        endpoints:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.OdsApiConnectionEndpoint'
          nullable: true
          readOnly: true
          type: array
        metadataUrl:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.TierSqlConnection:
      additionalProperties: false
      example:
        azureResourceGroupName: azureResourceGroupName
        sqlServerPassword: sqlServerPassword
        azureServerName: azureServerName
        sqlServer: sqlServer
        sqlServerUserName: sqlServerUserName
        azureSubscriptionId: azureSubscriptionId
        azureServerElasticPoolName: azureServerElasticPoolName
      properties:
        sqlServer:
          nullable: true
          type: string
        sqlServerUserName:
          nullable: true
          type: string
        sqlServerPassword:
          nullable: true
          type: string
        azureSubscriptionId:
          nullable: true
          type: string
        azureResourceGroupName:
          nullable: true
          type: string
        azureServerName:
          nullable: true
          type: string
        azureServerElasticPoolName:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.TotalEnrollmentsReportResponse:
      additionalProperties: false
      example:
        educationOrganizationId: 6
        enrollmentCount: 0
        id: id
        nameOfInstitution: nameOfInstitution
      properties:
        enrollmentCount:
          format: int32
          type: integer
        educationOrganizationId:
          format: int32
          type: integer
        id:
          nullable: true
          type: string
        nameOfInstitution:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiApplicationRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        applicationId:
          format: int32
          type: integer
        applicationName:
          nullable: true
          type: string
        claimSetName:
          nullable: true
          type: string
        operationalContextUri:
          nullable: true
          type: string
        vendorId:
          format: int32
          type: integer
        educationOrganizations:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EducationOrganization'
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiConnectionRequest:
      additionalProperties: false
      properties:
        connectionId:
          nullable: true
          type: string
        tenantId:
          nullable: true
          type: string
        connectionName:
          nullable: true
          type: string
        edFiVersion:
          nullable: true
          type: string
        edFiExtension:
          nullable: true
          type: string
        metadataUrl:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        clientSecret:
          nullable: true
          type: string
        tokenUrl:
          nullable: true
          type: string
        resourcesUrl:
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.UpdateEducationServiceCenterRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        educationServiceCenterId:
          format: int32
          type: integer
        nameOfInstitution:
          nullable: true
          type: string
        educationOrganizationCategoryDescriptors:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.UpdateInstanceRequest:
      additionalProperties: false
      properties:
        id:
          description: The Instance ID or Custom ID
          nullable: true
          type: string
        instanceName:
          description: Details
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        tenantId:
          description: Metadata
          nullable: true
          type: string
      type: object
    EdfiAdminApi.EdfiAdmin.V1.UpdateLocalEducationAgencyRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        year:
          format: int32
          nullable: true
          type: integer
        localEducationAgency:
          $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgency'
      type: object
    EdfiAdminApi.EdfiAdmin.V1.UpdateStateEducationAgencyRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        stateEducationAgencyId:
          format: int32
          type: integer
        nameOfInstitution:
          nullable: true
          type: string
        educationOrganizationCategoryDescriptors:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.UpdateVendorRequest:
      additionalProperties: false
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        vendorId:
          format: int32
          type: integer
        vendorName:
          nullable: true
          type: string
        applications:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplication'
          nullable: true
          readOnly: true
          type: array
        namespacePrefixes:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.Vendor:
      additionalProperties: false
      description: Common Objects
      example:
        namespacePrefixes:
        - namespacePrefixes
        - namespacePrefixes
        vendorId: 1
        vendorName: vendorName
        applications:
        - 5
        - 5
      properties:
        vendorId:
          format: int32
          type: integer
        vendorName:
          nullable: true
          type: string
        applications:
          description: "TODO: Changed from application object to applicationId's to\
            \ remove cyclic structure"
          items:
            format: int32
            type: integer
          nullable: true
          readOnly: true
          type: array
        namespacePrefixes:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.VendorCreatedResponse:
      additionalProperties: false
      example:
        instanceId: instanceId
        namespacePrefixes:
        - namespacePrefixes
        - namespacePrefixes
        tenantId: tenantId
        vendorId: 0
        vendorName: vendorName
        applications:
        - operationalContextUri: operationalContextUri
          tenantId: tenantId
          vendorId: 1
          claimSetName: claimSetName
          applicationId: 6
          applicationName: applicationName
        - operationalContextUri: operationalContextUri
          tenantId: tenantId
          vendorId: 1
          claimSetName: claimSetName
          applicationId: 6
          applicationName: applicationName
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        vendorId:
          format: int32
          type: integer
        vendorName:
          nullable: true
          type: string
        applications:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplication'
          nullable: true
          readOnly: true
          type: array
        namespacePrefixes:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.VendorListResponse:
      additionalProperties: false
      example:
        namespacePrefixes:
        - namespacePrefixes
        - namespacePrefixes
        tenantId: tenantId
        vendorId: 5
        vendorName: vendorName
      properties:
        tenantId:
          nullable: true
          type: string
        vendorId:
          format: int32
          type: integer
        vendorName:
          nullable: true
          type: string
        namespacePrefixes:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.VendorListResponsePaginatedItemsViewModel:
      additionalProperties: false
      example:
        data:
        - namespacePrefixes:
          - namespacePrefixes
          - namespacePrefixes
          tenantId: tenantId
          vendorId: 5
          vendorName: vendorName
        - namespacePrefixes:
          - namespacePrefixes
          - namespacePrefixes
          tenantId: tenantId
          vendorId: 5
          vendorName: vendorName
        pageIndex: 0
        count: 1
        pageSize: 6
      properties:
        pageIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        count:
          format: int64
          type: integer
        data:
          items:
            $ref: '#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.VendorListResponse'
          nullable: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.VendorProfileResponse:
      additionalProperties: false
      example:
        namespacePrefixes:
        - namespacePrefixes
        - namespacePrefixes
        tenantId: tenantId
        vendorId: 0
        vendorName: vendorName
      properties:
        tenantId:
          nullable: true
          type: string
        vendorId:
          format: int32
          type: integer
        vendorName:
          nullable: true
          type: string
        namespacePrefixes:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      type: object
    EdfiAdminApi.EdfiAdmin.V1.VendorUpdatedResponse:
      additionalProperties: false
      example:
        instanceId: instanceId
        tenantId: tenantId
        vendorId: 0
      properties:
        tenantId:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        vendorId:
          format: int32
          type: integer
      type: object
    Microsoft.AspNetCore.Mvc.ValidationProblemDetails:
      additionalProperties: {}
      example:
        instance: instance
        detail: detail
        type: type
        title: title
        errors:
          key:
          - errors
          - errors
        status: 6
      properties:
        errors:
          additionalProperties:
            items:
              type: string
            type: array
          nullable: true
          type: object
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      type: object
  securitySchemes:
    oauth2:
      description: Use bearer token generated from an OpenId server
      flows:
        clientCredentials:
          scopes:
            https://api.edgraph.com/tenant: EdGraph Platform - Tenant Api
          tokenUrl: https://login.dev.edgraph.com/connect/token
      type: oauth2

