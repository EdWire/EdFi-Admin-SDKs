/*
 * Ed-Fi Admin Api
 *
 * Ed-Fi Admin Api - v1.0
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdGraph.EdFiAdmin.Client.Client.OpenAPIDateConverter;

namespace EdGraph.EdFiAdmin.Client.Model
{
    /// <summary>
    /// EdfiAdminApiEdfiAdminV1EdFiApplicationListResponse
    /// </summary>
    [DataContract(Name = "EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationListResponse")]
    public partial class EdfiAdminApiEdfiAdminV1EdFiApplicationListResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdfiAdminApiEdfiAdminV1EdFiApplicationListResponse" /> class.
        /// </summary>
        /// <param name="tenantId">tenantId.</param>
        /// <param name="applicationId">applicationId.</param>
        /// <param name="applicationName">applicationName.</param>
        /// <param name="claimSetName">claimSetName.</param>
        /// <param name="operationalContextUri">operationalContextUri.</param>
        /// <param name="vendorId">vendorId.</param>
        /// <param name="vendorName">vendorName.</param>
        /// <param name="edOrgsCount">edOrgsCount.</param>
        public EdfiAdminApiEdfiAdminV1EdFiApplicationListResponse(string tenantId = default(string), int applicationId = default(int), string applicationName = default(string), string claimSetName = default(string), string operationalContextUri = default(string), int vendorId = default(int), string vendorName = default(string), int edOrgsCount = default(int))
        {
            this.TenantId = tenantId;
            this.ApplicationId = applicationId;
            this.ApplicationName = applicationName;
            this.ClaimSetName = claimSetName;
            this.OperationalContextUri = operationalContextUri;
            this.VendorId = vendorId;
            this.VendorName = vendorName;
            this.EdOrgsCount = edOrgsCount;
        }

        /// <summary>
        /// Gets or Sets TenantId
        /// </summary>
        [DataMember(Name = "tenantId", EmitDefaultValue = true)]
        public string TenantId { get; set; }

        /// <summary>
        /// Gets or Sets ApplicationId
        /// </summary>
        [DataMember(Name = "applicationId", EmitDefaultValue = false)]
        public int ApplicationId { get; set; }

        /// <summary>
        /// Gets or Sets ApplicationName
        /// </summary>
        [DataMember(Name = "applicationName", EmitDefaultValue = true)]
        public string ApplicationName { get; set; }

        /// <summary>
        /// Gets or Sets ClaimSetName
        /// </summary>
        [DataMember(Name = "claimSetName", EmitDefaultValue = true)]
        public string ClaimSetName { get; set; }

        /// <summary>
        /// Gets or Sets OperationalContextUri
        /// </summary>
        [DataMember(Name = "operationalContextUri", EmitDefaultValue = true)]
        public string OperationalContextUri { get; set; }

        /// <summary>
        /// Gets or Sets VendorId
        /// </summary>
        [DataMember(Name = "vendorId", EmitDefaultValue = false)]
        public int VendorId { get; set; }

        /// <summary>
        /// Gets or Sets VendorName
        /// </summary>
        [DataMember(Name = "vendorName", EmitDefaultValue = true)]
        public string VendorName { get; set; }

        /// <summary>
        /// Gets or Sets EdOrgsCount
        /// </summary>
        [DataMember(Name = "edOrgsCount", EmitDefaultValue = false)]
        public int EdOrgsCount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdfiAdminApiEdfiAdminV1EdFiApplicationListResponse {\n");
            sb.Append("  TenantId: ").Append(TenantId).Append("\n");
            sb.Append("  ApplicationId: ").Append(ApplicationId).Append("\n");
            sb.Append("  ApplicationName: ").Append(ApplicationName).Append("\n");
            sb.Append("  ClaimSetName: ").Append(ClaimSetName).Append("\n");
            sb.Append("  OperationalContextUri: ").Append(OperationalContextUri).Append("\n");
            sb.Append("  VendorId: ").Append(VendorId).Append("\n");
            sb.Append("  VendorName: ").Append(VendorName).Append("\n");
            sb.Append("  EdOrgsCount: ").Append(EdOrgsCount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
