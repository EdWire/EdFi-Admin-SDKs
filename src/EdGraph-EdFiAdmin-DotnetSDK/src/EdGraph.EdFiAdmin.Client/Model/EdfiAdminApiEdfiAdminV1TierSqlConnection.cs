/*
 * Ed-Fi Admin Api
 *
 * Ed-Fi Admin Api - v1.0
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdGraph.EdFiAdmin.Client.Client.OpenAPIDateConverter;

namespace EdGraph.EdFiAdmin.Client.Model
{
    /// <summary>
    /// EdfiAdminApiEdfiAdminV1TierSqlConnection
    /// </summary>
    [DataContract(Name = "EdfiAdminApi.EdfiAdmin.V1.TierSqlConnection")]
    public partial class EdfiAdminApiEdfiAdminV1TierSqlConnection : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdfiAdminApiEdfiAdminV1TierSqlConnection" /> class.
        /// </summary>
        /// <param name="sqlServer">sqlServer.</param>
        /// <param name="sqlServerUserName">sqlServerUserName.</param>
        /// <param name="sqlServerPassword">sqlServerPassword.</param>
        /// <param name="azureSubscriptionId">azureSubscriptionId.</param>
        /// <param name="azureResourceGroupName">azureResourceGroupName.</param>
        /// <param name="azureServerName">azureServerName.</param>
        /// <param name="azureServerElasticPoolName">azureServerElasticPoolName.</param>
        public EdfiAdminApiEdfiAdminV1TierSqlConnection(string sqlServer = default(string), string sqlServerUserName = default(string), string sqlServerPassword = default(string), string azureSubscriptionId = default(string), string azureResourceGroupName = default(string), string azureServerName = default(string), string azureServerElasticPoolName = default(string))
        {
            this.SqlServer = sqlServer;
            this.SqlServerUserName = sqlServerUserName;
            this.SqlServerPassword = sqlServerPassword;
            this.AzureSubscriptionId = azureSubscriptionId;
            this.AzureResourceGroupName = azureResourceGroupName;
            this.AzureServerName = azureServerName;
            this.AzureServerElasticPoolName = azureServerElasticPoolName;
        }

        /// <summary>
        /// Gets or Sets SqlServer
        /// </summary>
        [DataMember(Name = "sqlServer", EmitDefaultValue = true)]
        public string SqlServer { get; set; }

        /// <summary>
        /// Gets or Sets SqlServerUserName
        /// </summary>
        [DataMember(Name = "sqlServerUserName", EmitDefaultValue = true)]
        public string SqlServerUserName { get; set; }

        /// <summary>
        /// Gets or Sets SqlServerPassword
        /// </summary>
        [DataMember(Name = "sqlServerPassword", EmitDefaultValue = true)]
        public string SqlServerPassword { get; set; }

        /// <summary>
        /// Gets or Sets AzureSubscriptionId
        /// </summary>
        [DataMember(Name = "azureSubscriptionId", EmitDefaultValue = true)]
        public string AzureSubscriptionId { get; set; }

        /// <summary>
        /// Gets or Sets AzureResourceGroupName
        /// </summary>
        [DataMember(Name = "azureResourceGroupName", EmitDefaultValue = true)]
        public string AzureResourceGroupName { get; set; }

        /// <summary>
        /// Gets or Sets AzureServerName
        /// </summary>
        [DataMember(Name = "azureServerName", EmitDefaultValue = true)]
        public string AzureServerName { get; set; }

        /// <summary>
        /// Gets or Sets AzureServerElasticPoolName
        /// </summary>
        [DataMember(Name = "azureServerElasticPoolName", EmitDefaultValue = true)]
        public string AzureServerElasticPoolName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdfiAdminApiEdfiAdminV1TierSqlConnection {\n");
            sb.Append("  SqlServer: ").Append(SqlServer).Append("\n");
            sb.Append("  SqlServerUserName: ").Append(SqlServerUserName).Append("\n");
            sb.Append("  SqlServerPassword: ").Append(SqlServerPassword).Append("\n");
            sb.Append("  AzureSubscriptionId: ").Append(AzureSubscriptionId).Append("\n");
            sb.Append("  AzureResourceGroupName: ").Append(AzureResourceGroupName).Append("\n");
            sb.Append("  AzureServerName: ").Append(AzureServerName).Append("\n");
            sb.Append("  AzureServerElasticPoolName: ").Append(AzureServerElasticPoolName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
