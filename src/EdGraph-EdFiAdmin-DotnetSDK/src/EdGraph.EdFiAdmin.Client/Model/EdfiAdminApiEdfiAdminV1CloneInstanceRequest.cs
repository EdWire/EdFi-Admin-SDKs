/*
 * Ed-Fi Admin Api
 *
 * Ed-Fi Admin Api - v1.0
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdGraph.EdFiAdmin.Client.Client.OpenAPIDateConverter;

namespace EdGraph.EdFiAdmin.Client.Model
{
    /// <summary>
    /// EdfiAdminApiEdfiAdminV1CloneInstanceRequest
    /// </summary>
    [DataContract(Name = "EdfiAdminApi.EdfiAdmin.V1.CloneInstanceRequest")]
    public partial class EdfiAdminApiEdfiAdminV1CloneInstanceRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdfiAdminApiEdfiAdminV1CloneInstanceRequest" /> class.
        /// </summary>
        /// <param name="tenantId">tenantId.</param>
        /// <param name="sourceInstanceId">sourceInstanceId.</param>
        /// <param name="cloneInstanceName">cloneInstanceName.</param>
        /// <param name="cloneInstanceUseCustomId">cloneInstanceUseCustomId.</param>
        /// <param name="cloneInstanceCustomId">cloneInstanceCustomId.</param>
        /// <param name="cloneInstanceDescription">cloneInstanceDescription.</param>
        public EdfiAdminApiEdfiAdminV1CloneInstanceRequest(string tenantId = default(string), string sourceInstanceId = default(string), string cloneInstanceName = default(string), bool cloneInstanceUseCustomId = default(bool), string cloneInstanceCustomId = default(string), string cloneInstanceDescription = default(string))
        {
            this.TenantId = tenantId;
            this.SourceInstanceId = sourceInstanceId;
            this.CloneInstanceName = cloneInstanceName;
            this.CloneInstanceUseCustomId = cloneInstanceUseCustomId;
            this.CloneInstanceCustomId = cloneInstanceCustomId;
            this.CloneInstanceDescription = cloneInstanceDescription;
        }

        /// <summary>
        /// Gets or Sets TenantId
        /// </summary>
        [DataMember(Name = "tenantId", EmitDefaultValue = true)]
        public string TenantId { get; set; }

        /// <summary>
        /// Gets or Sets SourceInstanceId
        /// </summary>
        [DataMember(Name = "sourceInstanceId", EmitDefaultValue = true)]
        public string SourceInstanceId { get; set; }

        /// <summary>
        /// Gets or Sets CloneInstanceName
        /// </summary>
        [DataMember(Name = "cloneInstanceName", EmitDefaultValue = true)]
        public string CloneInstanceName { get; set; }

        /// <summary>
        /// Gets or Sets CloneInstanceUseCustomId
        /// </summary>
        [DataMember(Name = "cloneInstanceUseCustomId", EmitDefaultValue = true)]
        public bool CloneInstanceUseCustomId { get; set; }

        /// <summary>
        /// Gets or Sets CloneInstanceCustomId
        /// </summary>
        [DataMember(Name = "cloneInstanceCustomId", EmitDefaultValue = true)]
        public string CloneInstanceCustomId { get; set; }

        /// <summary>
        /// Gets or Sets CloneInstanceDescription
        /// </summary>
        [DataMember(Name = "cloneInstanceDescription", EmitDefaultValue = true)]
        public string CloneInstanceDescription { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdfiAdminApiEdfiAdminV1CloneInstanceRequest {\n");
            sb.Append("  TenantId: ").Append(TenantId).Append("\n");
            sb.Append("  SourceInstanceId: ").Append(SourceInstanceId).Append("\n");
            sb.Append("  CloneInstanceName: ").Append(CloneInstanceName).Append("\n");
            sb.Append("  CloneInstanceUseCustomId: ").Append(CloneInstanceUseCustomId).Append("\n");
            sb.Append("  CloneInstanceCustomId: ").Append(CloneInstanceCustomId).Append("\n");
            sb.Append("  CloneInstanceDescription: ").Append(CloneInstanceDescription).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
