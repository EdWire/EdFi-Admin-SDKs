/*
 * Ed-Fi Admin Api
 *
 * Ed-Fi Admin Api - v1.0
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdGraph.EdFiAdmin.Client.Client.OpenAPIDateConverter;

namespace EdGraph.EdFiAdmin.Client.Model
{
    /// <summary>
    /// EdfiAdminApiEdfiAdminV1LocalEducationAgency
    /// </summary>
    [DataContract(Name = "EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgency")]
    public partial class EdfiAdminApiEdfiAdminV1LocalEducationAgency : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdfiAdminApiEdfiAdminV1LocalEducationAgency" /> class.
        /// </summary>
        /// <param name="tenantId">tenantId.</param>
        /// <param name="instanceId">instanceId.</param>
        /// <param name="educationOrganizationId">educationOrganizationId.</param>
        /// <param name="localEducationAgencyId">localEducationAgencyId.</param>
        /// <param name="nameOfInstitution">nameOfInstitution.</param>
        /// <param name="shortnameOfInstitution">shortnameOfInstitution.</param>
        /// <param name="webSite">webSite.</param>
        /// <param name="operationalStatusDescriptorId">operationalStatusDescriptorId.</param>
        /// <param name="discriminator">discriminator.</param>
        /// <param name="createDate">createDate.</param>
        /// <param name="lastModifiedDate">lastModifiedDate.</param>
        /// <param name="localEducationAgencyCategoryDescriptorCodeValue">localEducationAgencyCategoryDescriptorCodeValue.</param>
        /// <param name="id">id.</param>
        public EdfiAdminApiEdfiAdminV1LocalEducationAgency(string tenantId = default(string), string instanceId = default(string), int educationOrganizationId = default(int), int localEducationAgencyId = default(int), string nameOfInstitution = default(string), string shortnameOfInstitution = default(string), string webSite = default(string), int operationalStatusDescriptorId = default(int), string discriminator = default(string), string createDate = default(string), string lastModifiedDate = default(string), string localEducationAgencyCategoryDescriptorCodeValue = default(string), string id = default(string))
        {
            this.TenantId = tenantId;
            this.InstanceId = instanceId;
            this.EducationOrganizationId = educationOrganizationId;
            this.LocalEducationAgencyId = localEducationAgencyId;
            this.NameOfInstitution = nameOfInstitution;
            this.ShortnameOfInstitution = shortnameOfInstitution;
            this.WebSite = webSite;
            this.OperationalStatusDescriptorId = operationalStatusDescriptorId;
            this.Discriminator = discriminator;
            this.CreateDate = createDate;
            this.LastModifiedDate = lastModifiedDate;
            this.LocalEducationAgencyCategoryDescriptorCodeValue = localEducationAgencyCategoryDescriptorCodeValue;
            this.Id = id;
        }

        /// <summary>
        /// Gets or Sets TenantId
        /// </summary>
        [DataMember(Name = "tenantId", EmitDefaultValue = true)]
        public string TenantId { get; set; }

        /// <summary>
        /// Gets or Sets InstanceId
        /// </summary>
        [DataMember(Name = "instanceId", EmitDefaultValue = true)]
        public string InstanceId { get; set; }

        /// <summary>
        /// Gets or Sets EducationOrganizationId
        /// </summary>
        [DataMember(Name = "educationOrganizationId", EmitDefaultValue = false)]
        public int EducationOrganizationId { get; set; }

        /// <summary>
        /// Gets or Sets LocalEducationAgencyId
        /// </summary>
        [DataMember(Name = "localEducationAgencyId", EmitDefaultValue = false)]
        public int LocalEducationAgencyId { get; set; }

        /// <summary>
        /// Gets or Sets NameOfInstitution
        /// </summary>
        [DataMember(Name = "nameOfInstitution", EmitDefaultValue = true)]
        public string NameOfInstitution { get; set; }

        /// <summary>
        /// Gets or Sets ShortnameOfInstitution
        /// </summary>
        [DataMember(Name = "shortnameOfInstitution", EmitDefaultValue = true)]
        public string ShortnameOfInstitution { get; set; }

        /// <summary>
        /// Gets or Sets WebSite
        /// </summary>
        [DataMember(Name = "webSite", EmitDefaultValue = true)]
        public string WebSite { get; set; }

        /// <summary>
        /// Gets or Sets OperationalStatusDescriptorId
        /// </summary>
        [DataMember(Name = "operationalStatusDescriptorId", EmitDefaultValue = false)]
        public int OperationalStatusDescriptorId { get; set; }

        /// <summary>
        /// Gets or Sets Discriminator
        /// </summary>
        [DataMember(Name = "discriminator", EmitDefaultValue = true)]
        public string Discriminator { get; set; }

        /// <summary>
        /// Gets or Sets CreateDate
        /// </summary>
        [DataMember(Name = "createDate", EmitDefaultValue = true)]
        public string CreateDate { get; set; }

        /// <summary>
        /// Gets or Sets LastModifiedDate
        /// </summary>
        [DataMember(Name = "lastModifiedDate", EmitDefaultValue = true)]
        public string LastModifiedDate { get; set; }

        /// <summary>
        /// Gets or Sets Addresses
        /// </summary>
        [DataMember(Name = "addresses", EmitDefaultValue = true)]
        public List<EdfiAdminApiEdfiAdminV1EducationOrganizationAddress> Addresses { get; private set; }

        /// <summary>
        /// Returns false as Addresses should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeAddresses()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets Categories
        /// </summary>
        [DataMember(Name = "categories", EmitDefaultValue = true)]
        public List<EdfiAdminApiEdfiAdminV1EducationOrganizationCategoryDescriptor> Categories { get; private set; }

        /// <summary>
        /// Returns false as Categories should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCategories()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets LocalEducationAgencyCategoryDescriptorCodeValue
        /// </summary>
        [DataMember(Name = "localEducationAgencyCategoryDescriptorCodeValue", EmitDefaultValue = true)]
        public string LocalEducationAgencyCategoryDescriptorCodeValue { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdfiAdminApiEdfiAdminV1LocalEducationAgency {\n");
            sb.Append("  TenantId: ").Append(TenantId).Append("\n");
            sb.Append("  InstanceId: ").Append(InstanceId).Append("\n");
            sb.Append("  EducationOrganizationId: ").Append(EducationOrganizationId).Append("\n");
            sb.Append("  LocalEducationAgencyId: ").Append(LocalEducationAgencyId).Append("\n");
            sb.Append("  NameOfInstitution: ").Append(NameOfInstitution).Append("\n");
            sb.Append("  ShortnameOfInstitution: ").Append(ShortnameOfInstitution).Append("\n");
            sb.Append("  WebSite: ").Append(WebSite).Append("\n");
            sb.Append("  OperationalStatusDescriptorId: ").Append(OperationalStatusDescriptorId).Append("\n");
            sb.Append("  Discriminator: ").Append(Discriminator).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  LastModifiedDate: ").Append(LastModifiedDate).Append("\n");
            sb.Append("  Addresses: ").Append(Addresses).Append("\n");
            sb.Append("  Categories: ").Append(Categories).Append("\n");
            sb.Append("  LocalEducationAgencyCategoryDescriptorCodeValue: ").Append(LocalEducationAgencyCategoryDescriptorCodeValue).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
