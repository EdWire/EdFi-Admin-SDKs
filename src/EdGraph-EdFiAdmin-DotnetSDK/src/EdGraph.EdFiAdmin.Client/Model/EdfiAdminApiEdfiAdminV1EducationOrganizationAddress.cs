/*
 * Ed-Fi Admin Api
 *
 * Ed-Fi Admin Api - v1.0
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdGraph.EdFiAdmin.Client.Client.OpenAPIDateConverter;

namespace EdGraph.EdFiAdmin.Client.Model
{
    /// <summary>
    /// EdfiAdminApiEdfiAdminV1EducationOrganizationAddress
    /// </summary>
    [DataContract(Name = "EdfiAdminApi.EdfiAdmin.V1.EducationOrganizationAddress")]
    public partial class EdfiAdminApiEdfiAdminV1EducationOrganizationAddress : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdfiAdminApiEdfiAdminV1EducationOrganizationAddress" /> class.
        /// </summary>
        /// <param name="addressTypeDescriptor">addressTypeDescriptor.</param>
        /// <param name="stateAbbreviationDescriptor">stateAbbreviationDescriptor.</param>
        /// <param name="city">city.</param>
        /// <param name="postalCode">postalCode.</param>
        /// <param name="streetNumberName">streetNumberName.</param>
        /// <param name="localeDescriptor">localeDescriptor.</param>
        /// <param name="buildingSiteNumber">buildingSiteNumber.</param>
        /// <param name="nameOfCounty">nameOfCounty.</param>
        public EdfiAdminApiEdfiAdminV1EducationOrganizationAddress(string addressTypeDescriptor = default(string), string stateAbbreviationDescriptor = default(string), string city = default(string), string postalCode = default(string), string streetNumberName = default(string), string localeDescriptor = default(string), string buildingSiteNumber = default(string), string nameOfCounty = default(string))
        {
            this.AddressTypeDescriptor = addressTypeDescriptor;
            this.StateAbbreviationDescriptor = stateAbbreviationDescriptor;
            this.City = city;
            this.PostalCode = postalCode;
            this.StreetNumberName = streetNumberName;
            this.LocaleDescriptor = localeDescriptor;
            this.BuildingSiteNumber = buildingSiteNumber;
            this.NameOfCounty = nameOfCounty;
        }

        /// <summary>
        /// Gets or Sets AddressTypeDescriptor
        /// </summary>
        [DataMember(Name = "addressTypeDescriptor", EmitDefaultValue = true)]
        public string AddressTypeDescriptor { get; set; }

        /// <summary>
        /// Gets or Sets StateAbbreviationDescriptor
        /// </summary>
        [DataMember(Name = "stateAbbreviationDescriptor", EmitDefaultValue = true)]
        public string StateAbbreviationDescriptor { get; set; }

        /// <summary>
        /// Gets or Sets City
        /// </summary>
        [DataMember(Name = "city", EmitDefaultValue = true)]
        public string City { get; set; }

        /// <summary>
        /// Gets or Sets PostalCode
        /// </summary>
        [DataMember(Name = "postalCode", EmitDefaultValue = true)]
        public string PostalCode { get; set; }

        /// <summary>
        /// Gets or Sets StreetNumberName
        /// </summary>
        [DataMember(Name = "streetNumberName", EmitDefaultValue = true)]
        public string StreetNumberName { get; set; }

        /// <summary>
        /// Gets or Sets LocaleDescriptor
        /// </summary>
        [DataMember(Name = "localeDescriptor", EmitDefaultValue = true)]
        public string LocaleDescriptor { get; set; }

        /// <summary>
        /// Gets or Sets BuildingSiteNumber
        /// </summary>
        [DataMember(Name = "buildingSiteNumber", EmitDefaultValue = true)]
        public string BuildingSiteNumber { get; set; }

        /// <summary>
        /// Gets or Sets NameOfCounty
        /// </summary>
        [DataMember(Name = "nameOfCounty", EmitDefaultValue = true)]
        public string NameOfCounty { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdfiAdminApiEdfiAdminV1EducationOrganizationAddress {\n");
            sb.Append("  AddressTypeDescriptor: ").Append(AddressTypeDescriptor).Append("\n");
            sb.Append("  StateAbbreviationDescriptor: ").Append(StateAbbreviationDescriptor).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  PostalCode: ").Append(PostalCode).Append("\n");
            sb.Append("  StreetNumberName: ").Append(StreetNumberName).Append("\n");
            sb.Append("  LocaleDescriptor: ").Append(LocaleDescriptor).Append("\n");
            sb.Append("  BuildingSiteNumber: ").Append(BuildingSiteNumber).Append("\n");
            sb.Append("  NameOfCounty: ").Append(NameOfCounty).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
