/*
 * Ed-Fi Admin Api
 *
 * Ed-Fi Admin Api - v1.0
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using EdGraph.EdFiAdmin.Client.Client;
using EdGraph.EdFiAdmin.Client.Api;
// uncomment below to import models
//using EdGraph.EdFiAdmin.Client.Model;

namespace EdGraph.EdFiAdmin.Client.Test.Api
{
    /// <summary>
    ///  Class for testing InstancesApplicationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class InstancesApplicationsApiTests : IDisposable
    {
        private InstancesApplicationsApi instance;

        public InstancesApplicationsApiTests()
        {
            instance = new InstancesApplicationsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of InstancesApplicationsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' InstancesApplicationsApi
            //Assert.IsType<InstancesApplicationsApi>(instance);
        }

        /// <summary>
        /// Test CreateApplicationAsync
        /// </summary>
        [Fact]
        public void CreateApplicationAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenantId = null;
            //string instanceId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //EdfiAdminApiEdfiAdminV1CreateEdFiApplicationRequest? edfiAdminApiEdfiAdminV1CreateEdFiApplicationRequest = null;
            //var response = instance.CreateApplicationAsync(tenantId, instanceId, apiVersion, xVersion, edfiAdminApiEdfiAdminV1CreateEdFiApplicationRequest);
            //Assert.IsType<EdfiAdminApiEdfiAdminV1EdFiApplicationCreatedResponse>(response);
        }

        /// <summary>
        /// Test CreateApplicationUserAccessAsync
        /// </summary>
        [Fact]
        public void CreateApplicationUserAccessAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenantId = null;
            //string instanceId = null;
            //string applicationId = null;
            //string apiClientId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //EdFiAdminApiApplicationAccessV1CreateApplicationAccessRequest? edFiAdminApiApplicationAccessV1CreateApplicationAccessRequest = null;
            //instance.CreateApplicationUserAccessAsync(tenantId, instanceId, applicationId, apiClientId, apiVersion, xVersion, edFiAdminApiApplicationAccessV1CreateApplicationAccessRequest);
        }

        /// <summary>
        /// Test DeleteApplicationAsync
        /// </summary>
        [Fact]
        public void DeleteApplicationAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenantId = null;
            //string instanceId = null;
            //int applicationId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //instance.DeleteApplicationAsync(tenantId, instanceId, applicationId, apiVersion, xVersion);
        }

        /// <summary>
        /// Test DeleteApplicationUserAccessAsync
        /// </summary>
        [Fact]
        public void DeleteApplicationUserAccessAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenantId = null;
            //string instanceId = null;
            //string applicationId = null;
            //string apiClientId = null;
            //string accessId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //instance.DeleteApplicationUserAccessAsync(tenantId, instanceId, applicationId, apiClientId, accessId, apiVersion, xVersion);
        }

        /// <summary>
        /// Test GetApplicationAccessAsync
        /// </summary>
        [Fact]
        public void GetApplicationAccessAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenantId = null;
            //string instanceId = null;
            //string applicationId = null;
            //string apiClientId = null;
            //int? pageSize = null;
            //int? pageIndex = null;
            //string? orderBy = null;
            //string? filter = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //var response = instance.GetApplicationAccessAsync(tenantId, instanceId, applicationId, apiClientId, pageSize, pageIndex, orderBy, filter, apiVersion, xVersion);
            //Assert.IsType<EdFiAdminApiApplicationAccessV1ApplicationAccessResponsePaginatedItemsViewModel>(response);
        }

        /// <summary>
        /// Test GetApplicationAccessByIdAsync
        /// </summary>
        [Fact]
        public void GetApplicationAccessByIdAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenantId = null;
            //string instanceId = null;
            //int applicationId = null;
            //int apiClientId = null;
            //string accessId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //var response = instance.GetApplicationAccessByIdAsync(tenantId, instanceId, applicationId, apiClientId, accessId, apiVersion, xVersion);
            //Assert.IsType<EdFiAdminApiApplicationAccessV1ApplicationAccessResponse>(response);
        }

        /// <summary>
        /// Test GetApplicationApiClientByIdAsync
        /// </summary>
        [Fact]
        public void GetApplicationApiClientByIdAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenantId = null;
            //string instanceId = null;
            //string applicationId = null;
            //int apiClientId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //var response = instance.GetApplicationApiClientByIdAsync(tenantId, instanceId, applicationId, apiClientId, apiVersion, xVersion);
            //Assert.IsType<EdfiAdminApiEdfiAdminV1EdFiApplicationApiClientProfileResponse>(response);
        }

        /// <summary>
        /// Test GetApplicationApiClientsAsync
        /// </summary>
        [Fact]
        public void GetApplicationApiClientsAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenantId = null;
            //string instanceId = null;
            //string applicationId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //var response = instance.GetApplicationApiClientsAsync(tenantId, instanceId, applicationId, apiVersion, xVersion);
            //Assert.IsType<EdfiAdminApiEdfiAdminV1EdFiApplicationApiClientProfileResponsePaginatedItemsViewModel>(response);
        }

        /// <summary>
        /// Test GetApplicationByIdAsync
        /// </summary>
        [Fact]
        public void GetApplicationByIdAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenantId = null;
            //string instanceId = null;
            //int applicationId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //var response = instance.GetApplicationByIdAsync(tenantId, instanceId, applicationId, apiVersion, xVersion);
            //Assert.IsType<EdfiAdminApiEdfiAdminV1EdFiApplicationProfileResponse>(response);
        }

        /// <summary>
        /// Test GetApplicationsAsync
        /// </summary>
        [Fact]
        public void GetApplicationsAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenantId = null;
            //string instanceId = null;
            //int? pageSize = null;
            //int? pageIndex = null;
            //string? orderBy = null;
            //string? filter = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //var response = instance.GetApplicationsAsync(tenantId, instanceId, pageSize, pageIndex, orderBy, filter, apiVersion, xVersion);
            //Assert.IsType<EdfiAdminApiEdfiAdminV1EdFiApplicationListResponsePaginatedItemsViewModel>(response);
        }

        /// <summary>
        /// Test RegenerateApiClientSecretAsync
        /// </summary>
        [Fact]
        public void RegenerateApiClientSecretAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenantId = null;
            //string instanceId = null;
            //int applicationId = null;
            //int apiClientId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //var response = instance.RegenerateApiClientSecretAsync(tenantId, instanceId, applicationId, apiClientId, apiVersion, xVersion);
            //Assert.IsType<EdfiAdminApiEdfiAdminV1RegenerateApiClientSecretResponse>(response);
        }

        /// <summary>
        /// Test SyncApplicationAsync
        /// </summary>
        [Fact]
        public void SyncApplicationAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenantId = null;
            //string instanceId = null;
            //int applicationId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //EdfiAdminApiEdfiAdminV1SyncApplicationRequest? edfiAdminApiEdfiAdminV1SyncApplicationRequest = null;
            //instance.SyncApplicationAsync(tenantId, instanceId, applicationId, apiVersion, xVersion, edfiAdminApiEdfiAdminV1SyncApplicationRequest);
        }

        /// <summary>
        /// Test UpdateApplicationAsync
        /// </summary>
        [Fact]
        public void UpdateApplicationAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenantId = null;
            //string instanceId = null;
            //string applicationId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //EdfiAdminApiEdfiAdminV1UpdateEdFiApplicationRequest? edfiAdminApiEdfiAdminV1UpdateEdFiApplicationRequest = null;
            //instance.UpdateApplicationAsync(tenantId, instanceId, applicationId, apiVersion, xVersion, edfiAdminApiEdfiAdminV1UpdateEdFiApplicationRequest);
        }

        /// <summary>
        /// Test UpdateApplicationUserAccessAsync
        /// </summary>
        [Fact]
        public void UpdateApplicationUserAccessAsyncTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenantId = null;
            //string instanceId = null;
            //string applicationId = null;
            //string apiClientId = null;
            //string accessId = null;
            //string? apiVersion = null;
            //string? xVersion = null;
            //EdFiAdminApiApplicationAccessV1UpdateApplicationAccessRequest? edFiAdminApiApplicationAccessV1UpdateApplicationAccessRequest = null;
            //instance.UpdateApplicationUserAccessAsync(tenantId, instanceId, applicationId, apiClientId, accessId, apiVersion, xVersion, edFiAdminApiApplicationAccessV1UpdateApplicationAccessRequest);
        }
    }
}
